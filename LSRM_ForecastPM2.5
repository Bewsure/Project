{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "22_7_LSTM_new30_7Day.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "6WI8D4lb70Vi",
        "outputId": "96064210-6501-4fc1-bf29-3a74733c8b57"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt \n",
        "from datetime import timedelta\n",
        "import os\n",
        "from matplotlib import pyplot\n",
        "import pandas as pd\n",
        "from IPython.core.display import display, HTML\n",
        "display(HTML(\"<style>.container { width:90% !important; }</style>\"))\n",
        "pd.options.display.max_columns = 999\n",
        "pd.options.display.max_rows = 999\n",
        "%matplotlib inline\n",
        "%config InlineBackend.figure_format='retina'\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "#import all essential libraries\n",
        "import sys \n",
        "import numpy as np # linear algebra\n",
        "from scipy.stats import randint\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv), data manipulation as in SQL\n",
        "import matplotlib.pyplot as plt # this is used for the plot the graph \n",
        "import seaborn as sns # used for plot interactive graph. \n",
        "from sklearn.metrics import mean_squared_error,r2_score\n",
        "## Deep-learing:\n",
        "import keras\n",
        "from keras.layers import Dense\n",
        "from keras.models import Sequential\n",
        "#from keras.optimizers import SGD \n",
        "from keras.callbacks import EarlyStopping\n",
        "from keras.utils import np_utils\n",
        "import itertools\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import Dropout\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "import pandas as pd\n",
        "print(f'pandas version: {pd.__version__}')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<style>.container { width:90% !important; }</style>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "pandas version: 1.3.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "15PouXLUc3ia"
      },
      "source": [
        "# **ทดลองสร้าง LSTM Model**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e8MPrv15c7-o"
      },
      "source": [
        "# เรียกดูข้อมูลหลัง Clean Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "YVsp8kXg8C9m",
        "outputId": "3c21fd8b-4de5-44be-82be-167b6f52d372"
      },
      "source": [
        "#dataset ผ่านการ Clean แล้ว\n",
        "PM_w = pd.read_csv('https://raw.githubusercontent.com/Bewsure/DataLSTM/main/CleanPM_15_7.csv')\n",
        "PM_w.set_index('date', inplace=True)\n",
        "PM_w.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-690c26cb-1ca2-4aba-a048-0927badd8a21\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pressure</th>\n",
              "      <th>wind_speed</th>\n",
              "      <th>humidity</th>\n",
              "      <th>temperature</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2017-11-01 00:00:00</th>\n",
              "      <td>101013.3203</td>\n",
              "      <td>2.700052</td>\n",
              "      <td>67.445312</td>\n",
              "      <td>27.344531</td>\n",
              "      <td>57</td>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-11-02 00:00:00</th>\n",
              "      <td>100784.9225</td>\n",
              "      <td>2.324088</td>\n",
              "      <td>63.472868</td>\n",
              "      <td>28.941860</td>\n",
              "      <td>55</td>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-11-03 00:00:00</th>\n",
              "      <td>100780.4428</td>\n",
              "      <td>2.484124</td>\n",
              "      <td>57.516605</td>\n",
              "      <td>29.244280</td>\n",
              "      <td>65</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-11-04 00:00:00</th>\n",
              "      <td>100807.7431</td>\n",
              "      <td>2.696210</td>\n",
              "      <td>50.972222</td>\n",
              "      <td>28.576736</td>\n",
              "      <td>54</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-11-05 00:00:00</th>\n",
              "      <td>100865.8363</td>\n",
              "      <td>4.023996</td>\n",
              "      <td>60.676157</td>\n",
              "      <td>25.747331</td>\n",
              "      <td>64</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-690c26cb-1ca2-4aba-a048-0927badd8a21')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-690c26cb-1ca2-4aba-a048-0927badd8a21 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-690c26cb-1ca2-4aba-a048-0927badd8a21');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                        pressure  wind_speed   humidity  temperature  PM10  \\\n",
              "date                                                                         \n",
              "2017-11-01 00:00:00  101013.3203    2.700052  67.445312    27.344531    57   \n",
              "2017-11-02 00:00:00  100784.9225    2.324088  63.472868    28.941860    55   \n",
              "2017-11-03 00:00:00  100780.4428    2.484124  57.516605    29.244280    65   \n",
              "2017-11-04 00:00:00  100807.7431    2.696210  50.972222    28.576736    54   \n",
              "2017-11-05 00:00:00  100865.8363    4.023996  60.676157    25.747331    64   \n",
              "\n",
              "                     PM2.5  \n",
              "date                        \n",
              "2017-11-01 00:00:00     43  \n",
              "2017-11-02 00:00:00     43  \n",
              "2017-11-03 00:00:00     40  \n",
              "2017-11-04 00:00:00     51  \n",
              "2017-11-05 00:00:00     33  "
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CY6GTAlBJ71p",
        "outputId": "bffbec78-5181-4c9e-ce5f-b57bc37625ad"
      },
      "source": [
        "PM_w.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1157, 6)"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PnOWIFNwdCW2"
      },
      "source": [
        "# ใส่ฟังก์ชันสำหรับประมวลผลข้อมูล Time series หลายตัวแปร + ทำ min max scaling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ko0pDElOJ7-n"
      },
      "source": [
        "# function สำหรับ preprocess ข้อมูล time series หลายตัวแปร\n",
        "def series_to_supervised(data, n_in=1, n_out=1, dropnan=True,feat_name=None):\n",
        "    \n",
        "    n_vars = 1 if type(data) is list else data.shape[1]\n",
        "    df = pd.DataFrame(data)\n",
        "    cols, names = list(), list()\n",
        "    \n",
        "    # input sequence (t-n, ... t-1)\n",
        "    for i in range(n_in, 0, -1):\n",
        "        cols.append(df.shift(i))\n",
        "        names += [f'{feat_name[j]}(t-{i})' for j in range(n_vars)]\n",
        "    \n",
        "    # forecast sequence (t, t+1, ... t+n)\n",
        "    for i in range(0, n_out):\n",
        "        cols.append(df.shift(-i))\n",
        "        if i == 0:\n",
        "            names += [f'{feat_name[j]}(t)' for j in range(n_vars)]\n",
        "        else:\n",
        "            names += [f'{feat_name[j]}(t+{i})' for j in range(n_vars)]\n",
        "    \n",
        "    # put it all together\n",
        "    agg = pd.concat(cols, axis=1)\n",
        "    agg.columns = names\n",
        "    \n",
        "    # drop rows with NaN values\n",
        "    if dropnan:\n",
        "        agg.dropna(inplace=True)\n",
        "    return agg\n",
        "\n",
        "\n",
        "\n",
        "dataset = PM_w\n",
        "values = dataset.values\n",
        "values = values.astype('float32')\n",
        "\n",
        "# ทำ scaling ข้อมูลด้วยวิธี min max scaling เปลี่ยน scale ข้อมูลแต่ละ column ให้อยู่ระหว่าง [0,1] และเก็บค่า min max แต่ละ column ไว้สำหรับทำ rescale ข้อมูลภายหลัง\n",
        "min_dict = dict()\n",
        "max_dict = dict()\n",
        "for col in dataset.columns:\n",
        "  min_dict[col] = dataset[col].min()\n",
        "  max_dict[col] = dataset[col].max()\n",
        "  dataset[col] = (dataset[col] - dataset[col].min())/(dataset[col].max()-dataset[col].min())\n",
        "  \n",
        "# ใช้ function สำหรับ preprocess ข้อมูลที่เขียนไว้ และ drop column ที่ไม่ได้ใช้\n",
        "reframed = series_to_supervised(dataset.values, 30, 7,feat_name=PM_w.columns)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "id": "XDKfggy5J8CS",
        "outputId": "d772544e-1d8a-4977-9123-6dae8bd0f476"
      },
      "source": [
        "reframed.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-5fdab653-0d49-44f2-90f2-8105ecdd1bbe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pressure(t-30)</th>\n",
              "      <th>wind_speed(t-30)</th>\n",
              "      <th>humidity(t-30)</th>\n",
              "      <th>temperature(t-30)</th>\n",
              "      <th>PM10(t-30)</th>\n",
              "      <th>PM2.5(t-30)</th>\n",
              "      <th>pressure(t-29)</th>\n",
              "      <th>wind_speed(t-29)</th>\n",
              "      <th>humidity(t-29)</th>\n",
              "      <th>temperature(t-29)</th>\n",
              "      <th>PM10(t-29)</th>\n",
              "      <th>PM2.5(t-29)</th>\n",
              "      <th>pressure(t-28)</th>\n",
              "      <th>wind_speed(t-28)</th>\n",
              "      <th>humidity(t-28)</th>\n",
              "      <th>temperature(t-28)</th>\n",
              "      <th>PM10(t-28)</th>\n",
              "      <th>PM2.5(t-28)</th>\n",
              "      <th>pressure(t-27)</th>\n",
              "      <th>wind_speed(t-27)</th>\n",
              "      <th>humidity(t-27)</th>\n",
              "      <th>temperature(t-27)</th>\n",
              "      <th>PM10(t-27)</th>\n",
              "      <th>PM2.5(t-27)</th>\n",
              "      <th>pressure(t-26)</th>\n",
              "      <th>wind_speed(t-26)</th>\n",
              "      <th>humidity(t-26)</th>\n",
              "      <th>temperature(t-26)</th>\n",
              "      <th>PM10(t-26)</th>\n",
              "      <th>PM2.5(t-26)</th>\n",
              "      <th>pressure(t-25)</th>\n",
              "      <th>wind_speed(t-25)</th>\n",
              "      <th>humidity(t-25)</th>\n",
              "      <th>temperature(t-25)</th>\n",
              "      <th>PM10(t-25)</th>\n",
              "      <th>PM2.5(t-25)</th>\n",
              "      <th>pressure(t-24)</th>\n",
              "      <th>wind_speed(t-24)</th>\n",
              "      <th>humidity(t-24)</th>\n",
              "      <th>temperature(t-24)</th>\n",
              "      <th>PM10(t-24)</th>\n",
              "      <th>PM2.5(t-24)</th>\n",
              "      <th>pressure(t-23)</th>\n",
              "      <th>wind_speed(t-23)</th>\n",
              "      <th>humidity(t-23)</th>\n",
              "      <th>temperature(t-23)</th>\n",
              "      <th>PM10(t-23)</th>\n",
              "      <th>PM2.5(t-23)</th>\n",
              "      <th>pressure(t-22)</th>\n",
              "      <th>wind_speed(t-22)</th>\n",
              "      <th>humidity(t-22)</th>\n",
              "      <th>temperature(t-22)</th>\n",
              "      <th>PM10(t-22)</th>\n",
              "      <th>PM2.5(t-22)</th>\n",
              "      <th>pressure(t-21)</th>\n",
              "      <th>wind_speed(t-21)</th>\n",
              "      <th>humidity(t-21)</th>\n",
              "      <th>temperature(t-21)</th>\n",
              "      <th>PM10(t-21)</th>\n",
              "      <th>PM2.5(t-21)</th>\n",
              "      <th>pressure(t-20)</th>\n",
              "      <th>wind_speed(t-20)</th>\n",
              "      <th>humidity(t-20)</th>\n",
              "      <th>temperature(t-20)</th>\n",
              "      <th>PM10(t-20)</th>\n",
              "      <th>PM2.5(t-20)</th>\n",
              "      <th>pressure(t-19)</th>\n",
              "      <th>wind_speed(t-19)</th>\n",
              "      <th>humidity(t-19)</th>\n",
              "      <th>temperature(t-19)</th>\n",
              "      <th>PM10(t-19)</th>\n",
              "      <th>PM2.5(t-19)</th>\n",
              "      <th>pressure(t-18)</th>\n",
              "      <th>wind_speed(t-18)</th>\n",
              "      <th>humidity(t-18)</th>\n",
              "      <th>temperature(t-18)</th>\n",
              "      <th>PM10(t-18)</th>\n",
              "      <th>PM2.5(t-18)</th>\n",
              "      <th>pressure(t-17)</th>\n",
              "      <th>wind_speed(t-17)</th>\n",
              "      <th>humidity(t-17)</th>\n",
              "      <th>temperature(t-17)</th>\n",
              "      <th>PM10(t-17)</th>\n",
              "      <th>PM2.5(t-17)</th>\n",
              "      <th>pressure(t-16)</th>\n",
              "      <th>wind_speed(t-16)</th>\n",
              "      <th>humidity(t-16)</th>\n",
              "      <th>temperature(t-16)</th>\n",
              "      <th>PM10(t-16)</th>\n",
              "      <th>PM2.5(t-16)</th>\n",
              "      <th>pressure(t-15)</th>\n",
              "      <th>wind_speed(t-15)</th>\n",
              "      <th>humidity(t-15)</th>\n",
              "      <th>temperature(t-15)</th>\n",
              "      <th>PM10(t-15)</th>\n",
              "      <th>PM2.5(t-15)</th>\n",
              "      <th>pressure(t-14)</th>\n",
              "      <th>wind_speed(t-14)</th>\n",
              "      <th>humidity(t-14)</th>\n",
              "      <th>temperature(t-14)</th>\n",
              "      <th>PM10(t-14)</th>\n",
              "      <th>PM2.5(t-14)</th>\n",
              "      <th>pressure(t-13)</th>\n",
              "      <th>wind_speed(t-13)</th>\n",
              "      <th>humidity(t-13)</th>\n",
              "      <th>temperature(t-13)</th>\n",
              "      <th>PM10(t-13)</th>\n",
              "      <th>PM2.5(t-13)</th>\n",
              "      <th>pressure(t-12)</th>\n",
              "      <th>wind_speed(t-12)</th>\n",
              "      <th>humidity(t-12)</th>\n",
              "      <th>temperature(t-12)</th>\n",
              "      <th>PM10(t-12)</th>\n",
              "      <th>PM2.5(t-12)</th>\n",
              "      <th>pressure(t-11)</th>\n",
              "      <th>wind_speed(t-11)</th>\n",
              "      <th>humidity(t-11)</th>\n",
              "      <th>temperature(t-11)</th>\n",
              "      <th>PM10(t-11)</th>\n",
              "      <th>PM2.5(t-11)</th>\n",
              "      <th>pressure(t-10)</th>\n",
              "      <th>wind_speed(t-10)</th>\n",
              "      <th>humidity(t-10)</th>\n",
              "      <th>temperature(t-10)</th>\n",
              "      <th>PM10(t-10)</th>\n",
              "      <th>PM2.5(t-10)</th>\n",
              "      <th>pressure(t-9)</th>\n",
              "      <th>wind_speed(t-9)</th>\n",
              "      <th>humidity(t-9)</th>\n",
              "      <th>temperature(t-9)</th>\n",
              "      <th>PM10(t-9)</th>\n",
              "      <th>PM2.5(t-9)</th>\n",
              "      <th>pressure(t-8)</th>\n",
              "      <th>wind_speed(t-8)</th>\n",
              "      <th>humidity(t-8)</th>\n",
              "      <th>temperature(t-8)</th>\n",
              "      <th>PM10(t-8)</th>\n",
              "      <th>PM2.5(t-8)</th>\n",
              "      <th>pressure(t-7)</th>\n",
              "      <th>wind_speed(t-7)</th>\n",
              "      <th>humidity(t-7)</th>\n",
              "      <th>temperature(t-7)</th>\n",
              "      <th>PM10(t-7)</th>\n",
              "      <th>PM2.5(t-7)</th>\n",
              "      <th>pressure(t-6)</th>\n",
              "      <th>wind_speed(t-6)</th>\n",
              "      <th>humidity(t-6)</th>\n",
              "      <th>temperature(t-6)</th>\n",
              "      <th>PM10(t-6)</th>\n",
              "      <th>PM2.5(t-6)</th>\n",
              "      <th>pressure(t-5)</th>\n",
              "      <th>wind_speed(t-5)</th>\n",
              "      <th>humidity(t-5)</th>\n",
              "      <th>temperature(t-5)</th>\n",
              "      <th>PM10(t-5)</th>\n",
              "      <th>PM2.5(t-5)</th>\n",
              "      <th>pressure(t-4)</th>\n",
              "      <th>wind_speed(t-4)</th>\n",
              "      <th>humidity(t-4)</th>\n",
              "      <th>temperature(t-4)</th>\n",
              "      <th>PM10(t-4)</th>\n",
              "      <th>PM2.5(t-4)</th>\n",
              "      <th>pressure(t-3)</th>\n",
              "      <th>wind_speed(t-3)</th>\n",
              "      <th>humidity(t-3)</th>\n",
              "      <th>temperature(t-3)</th>\n",
              "      <th>PM10(t-3)</th>\n",
              "      <th>PM2.5(t-3)</th>\n",
              "      <th>pressure(t-2)</th>\n",
              "      <th>wind_speed(t-2)</th>\n",
              "      <th>humidity(t-2)</th>\n",
              "      <th>temperature(t-2)</th>\n",
              "      <th>PM10(t-2)</th>\n",
              "      <th>PM2.5(t-2)</th>\n",
              "      <th>pressure(t-1)</th>\n",
              "      <th>wind_speed(t-1)</th>\n",
              "      <th>humidity(t-1)</th>\n",
              "      <th>temperature(t-1)</th>\n",
              "      <th>PM10(t-1)</th>\n",
              "      <th>PM2.5(t-1)</th>\n",
              "      <th>pressure(t)</th>\n",
              "      <th>wind_speed(t)</th>\n",
              "      <th>humidity(t)</th>\n",
              "      <th>temperature(t)</th>\n",
              "      <th>PM10(t)</th>\n",
              "      <th>PM2.5(t)</th>\n",
              "      <th>pressure(t+1)</th>\n",
              "      <th>wind_speed(t+1)</th>\n",
              "      <th>humidity(t+1)</th>\n",
              "      <th>temperature(t+1)</th>\n",
              "      <th>PM10(t+1)</th>\n",
              "      <th>PM2.5(t+1)</th>\n",
              "      <th>pressure(t+2)</th>\n",
              "      <th>wind_speed(t+2)</th>\n",
              "      <th>humidity(t+2)</th>\n",
              "      <th>temperature(t+2)</th>\n",
              "      <th>PM10(t+2)</th>\n",
              "      <th>PM2.5(t+2)</th>\n",
              "      <th>pressure(t+3)</th>\n",
              "      <th>wind_speed(t+3)</th>\n",
              "      <th>humidity(t+3)</th>\n",
              "      <th>temperature(t+3)</th>\n",
              "      <th>PM10(t+3)</th>\n",
              "      <th>PM2.5(t+3)</th>\n",
              "      <th>pressure(t+4)</th>\n",
              "      <th>wind_speed(t+4)</th>\n",
              "      <th>humidity(t+4)</th>\n",
              "      <th>temperature(t+4)</th>\n",
              "      <th>PM10(t+4)</th>\n",
              "      <th>PM2.5(t+4)</th>\n",
              "      <th>pressure(t+5)</th>\n",
              "      <th>wind_speed(t+5)</th>\n",
              "      <th>humidity(t+5)</th>\n",
              "      <th>temperature(t+5)</th>\n",
              "      <th>PM10(t+5)</th>\n",
              "      <th>PM2.5(t+5)</th>\n",
              "      <th>pressure(t+6)</th>\n",
              "      <th>wind_speed(t+6)</th>\n",
              "      <th>humidity(t+6)</th>\n",
              "      <th>temperature(t+6)</th>\n",
              "      <th>PM10(t+6)</th>\n",
              "      <th>PM2.5(t+6)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>0.538021</td>\n",
              "      <td>0.219516</td>\n",
              "      <td>0.454343</td>\n",
              "      <td>0.535788</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.416667</td>\n",
              "      <td>0.413782</td>\n",
              "      <td>0.188950</td>\n",
              "      <td>0.375677</td>\n",
              "      <td>0.651000</td>\n",
              "      <td>0.5125</td>\n",
              "      <td>0.416667</td>\n",
              "      <td>0.411345</td>\n",
              "      <td>0.201961</td>\n",
              "      <td>0.257727</td>\n",
              "      <td>0.672813</td>\n",
              "      <td>0.6375</td>\n",
              "      <td>0.380952</td>\n",
              "      <td>0.426195</td>\n",
              "      <td>0.219204</td>\n",
              "      <td>0.128131</td>\n",
              "      <td>0.624664</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.511905</td>\n",
              "      <td>0.457796</td>\n",
              "      <td>0.327154</td>\n",
              "      <td>0.320295</td>\n",
              "      <td>0.420585</td>\n",
              "      <td>0.6250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.461896</td>\n",
              "      <td>0.188413</td>\n",
              "      <td>0.528324</td>\n",
              "      <td>0.387238</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.476190</td>\n",
              "      <td>0.434503</td>\n",
              "      <td>0.187702</td>\n",
              "      <td>0.516270</td>\n",
              "      <td>0.545075</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.467402</td>\n",
              "      <td>0.096816</td>\n",
              "      <td>0.526184</td>\n",
              "      <td>0.554185</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.418240</td>\n",
              "      <td>0.134696</td>\n",
              "      <td>0.506616</td>\n",
              "      <td>0.641702</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.408461</td>\n",
              "      <td>0.144328</td>\n",
              "      <td>0.547321</td>\n",
              "      <td>0.697341</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.439695</td>\n",
              "      <td>0.137528</td>\n",
              "      <td>0.720623</td>\n",
              "      <td>0.537250</td>\n",
              "      <td>0.3375</td>\n",
              "      <td>0.154762</td>\n",
              "      <td>0.364541</td>\n",
              "      <td>0.132048</td>\n",
              "      <td>0.603391</td>\n",
              "      <td>0.640624</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.343037</td>\n",
              "      <td>0.130208</td>\n",
              "      <td>0.738763</td>\n",
              "      <td>0.594819</td>\n",
              "      <td>0.5250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.368347</td>\n",
              "      <td>0.097674</td>\n",
              "      <td>0.685736</td>\n",
              "      <td>0.654657</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.369048</td>\n",
              "      <td>0.425352</td>\n",
              "      <td>0.118190</td>\n",
              "      <td>0.598919</td>\n",
              "      <td>0.688539</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.450995</td>\n",
              "      <td>0.137686</td>\n",
              "      <td>0.744050</td>\n",
              "      <td>0.613990</td>\n",
              "      <td>0.5750</td>\n",
              "      <td>0.190476</td>\n",
              "      <td>0.409609</td>\n",
              "      <td>0.078583</td>\n",
              "      <td>0.700908</td>\n",
              "      <td>0.689102</td>\n",
              "      <td>0.6750</td>\n",
              "      <td>0.285714</td>\n",
              "      <td>0.343684</td>\n",
              "      <td>0.060515</td>\n",
              "      <td>0.617550</td>\n",
              "      <td>0.775729</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.440476</td>\n",
              "      <td>0.352591</td>\n",
              "      <td>0.123189</td>\n",
              "      <td>0.711680</td>\n",
              "      <td>0.693210</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>0.345238</td>\n",
              "      <td>0.412945</td>\n",
              "      <td>0.091223</td>\n",
              "      <td>0.835963</td>\n",
              "      <td>0.494610</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.178571</td>\n",
              "      <td>0.396373</td>\n",
              "      <td>0.209147</td>\n",
              "      <td>0.732142</td>\n",
              "      <td>0.588208</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.130952</td>\n",
              "      <td>0.405463</td>\n",
              "      <td>0.125130</td>\n",
              "      <td>0.657801</td>\n",
              "      <td>0.645729</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.426895</td>\n",
              "      <td>0.221703</td>\n",
              "      <td>0.525527</td>\n",
              "      <td>0.658408</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.107143</td>\n",
              "      <td>0.537267</td>\n",
              "      <td>0.205896</td>\n",
              "      <td>0.444590</td>\n",
              "      <td>0.608583</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.604297</td>\n",
              "      <td>0.175516</td>\n",
              "      <td>0.383185</td>\n",
              "      <td>0.548935</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.589322</td>\n",
              "      <td>0.180045</td>\n",
              "      <td>0.360667</td>\n",
              "      <td>0.586397</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.495900</td>\n",
              "      <td>0.181460</td>\n",
              "      <td>0.408793</td>\n",
              "      <td>0.569134</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.473799</td>\n",
              "      <td>0.208035</td>\n",
              "      <td>0.508910</td>\n",
              "      <td>0.562290</td>\n",
              "      <td>0.4250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.466922</td>\n",
              "      <td>0.186655</td>\n",
              "      <td>0.448211</td>\n",
              "      <td>0.675020</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.424108</td>\n",
              "      <td>0.128532</td>\n",
              "      <td>0.487399</td>\n",
              "      <td>0.673676</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.438966</td>\n",
              "      <td>0.146584</td>\n",
              "      <td>0.424369</td>\n",
              "      <td>0.670745</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.475717</td>\n",
              "      <td>0.113534</td>\n",
              "      <td>0.403718</td>\n",
              "      <td>0.652827</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.453928</td>\n",
              "      <td>0.103208</td>\n",
              "      <td>0.389125</td>\n",
              "      <td>0.678741</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.425234</td>\n",
              "      <td>0.178162</td>\n",
              "      <td>0.376333</td>\n",
              "      <td>0.715224</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.479144</td>\n",
              "      <td>0.197915</td>\n",
              "      <td>0.439031</td>\n",
              "      <td>0.561427</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.481644</td>\n",
              "      <td>0.166368</td>\n",
              "      <td>0.419121</td>\n",
              "      <td>0.610642</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.496257</td>\n",
              "      <td>0.168700</td>\n",
              "      <td>0.378277</td>\n",
              "      <td>0.683534</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.321429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>0.413782</td>\n",
              "      <td>0.188950</td>\n",
              "      <td>0.375677</td>\n",
              "      <td>0.651000</td>\n",
              "      <td>0.5125</td>\n",
              "      <td>0.416667</td>\n",
              "      <td>0.411345</td>\n",
              "      <td>0.201961</td>\n",
              "      <td>0.257727</td>\n",
              "      <td>0.672813</td>\n",
              "      <td>0.6375</td>\n",
              "      <td>0.380952</td>\n",
              "      <td>0.426195</td>\n",
              "      <td>0.219204</td>\n",
              "      <td>0.128131</td>\n",
              "      <td>0.624664</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.511905</td>\n",
              "      <td>0.457796</td>\n",
              "      <td>0.327154</td>\n",
              "      <td>0.320295</td>\n",
              "      <td>0.420585</td>\n",
              "      <td>0.6250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.461896</td>\n",
              "      <td>0.188413</td>\n",
              "      <td>0.528324</td>\n",
              "      <td>0.387238</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.476190</td>\n",
              "      <td>0.434503</td>\n",
              "      <td>0.187702</td>\n",
              "      <td>0.516270</td>\n",
              "      <td>0.545075</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.467402</td>\n",
              "      <td>0.096816</td>\n",
              "      <td>0.526184</td>\n",
              "      <td>0.554185</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.418240</td>\n",
              "      <td>0.134696</td>\n",
              "      <td>0.506616</td>\n",
              "      <td>0.641702</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.408461</td>\n",
              "      <td>0.144328</td>\n",
              "      <td>0.547321</td>\n",
              "      <td>0.697341</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.439695</td>\n",
              "      <td>0.137528</td>\n",
              "      <td>0.720623</td>\n",
              "      <td>0.537250</td>\n",
              "      <td>0.3375</td>\n",
              "      <td>0.154762</td>\n",
              "      <td>0.364541</td>\n",
              "      <td>0.132048</td>\n",
              "      <td>0.603391</td>\n",
              "      <td>0.640624</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.343037</td>\n",
              "      <td>0.130208</td>\n",
              "      <td>0.738763</td>\n",
              "      <td>0.594819</td>\n",
              "      <td>0.5250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.368347</td>\n",
              "      <td>0.097674</td>\n",
              "      <td>0.685736</td>\n",
              "      <td>0.654657</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.369048</td>\n",
              "      <td>0.425352</td>\n",
              "      <td>0.118190</td>\n",
              "      <td>0.598919</td>\n",
              "      <td>0.688539</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.450995</td>\n",
              "      <td>0.137686</td>\n",
              "      <td>0.744050</td>\n",
              "      <td>0.613990</td>\n",
              "      <td>0.5750</td>\n",
              "      <td>0.190476</td>\n",
              "      <td>0.409609</td>\n",
              "      <td>0.078583</td>\n",
              "      <td>0.700908</td>\n",
              "      <td>0.689102</td>\n",
              "      <td>0.6750</td>\n",
              "      <td>0.285714</td>\n",
              "      <td>0.343684</td>\n",
              "      <td>0.060515</td>\n",
              "      <td>0.617550</td>\n",
              "      <td>0.775729</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.440476</td>\n",
              "      <td>0.352591</td>\n",
              "      <td>0.123189</td>\n",
              "      <td>0.711680</td>\n",
              "      <td>0.693210</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>0.345238</td>\n",
              "      <td>0.412945</td>\n",
              "      <td>0.091223</td>\n",
              "      <td>0.835963</td>\n",
              "      <td>0.494610</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.178571</td>\n",
              "      <td>0.396373</td>\n",
              "      <td>0.209147</td>\n",
              "      <td>0.732142</td>\n",
              "      <td>0.588208</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.130952</td>\n",
              "      <td>0.405463</td>\n",
              "      <td>0.125130</td>\n",
              "      <td>0.657801</td>\n",
              "      <td>0.645729</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.426895</td>\n",
              "      <td>0.221703</td>\n",
              "      <td>0.525527</td>\n",
              "      <td>0.658408</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.107143</td>\n",
              "      <td>0.537267</td>\n",
              "      <td>0.205896</td>\n",
              "      <td>0.444590</td>\n",
              "      <td>0.608583</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.604297</td>\n",
              "      <td>0.175516</td>\n",
              "      <td>0.383185</td>\n",
              "      <td>0.548935</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.589322</td>\n",
              "      <td>0.180045</td>\n",
              "      <td>0.360667</td>\n",
              "      <td>0.586397</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.495900</td>\n",
              "      <td>0.181460</td>\n",
              "      <td>0.408793</td>\n",
              "      <td>0.569134</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.473799</td>\n",
              "      <td>0.208035</td>\n",
              "      <td>0.508910</td>\n",
              "      <td>0.562290</td>\n",
              "      <td>0.4250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.466922</td>\n",
              "      <td>0.186655</td>\n",
              "      <td>0.448211</td>\n",
              "      <td>0.675020</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.424108</td>\n",
              "      <td>0.128532</td>\n",
              "      <td>0.487399</td>\n",
              "      <td>0.673676</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.438966</td>\n",
              "      <td>0.146584</td>\n",
              "      <td>0.424369</td>\n",
              "      <td>0.670745</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.475717</td>\n",
              "      <td>0.113534</td>\n",
              "      <td>0.403718</td>\n",
              "      <td>0.652827</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.453928</td>\n",
              "      <td>0.103208</td>\n",
              "      <td>0.389125</td>\n",
              "      <td>0.678741</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.425234</td>\n",
              "      <td>0.178162</td>\n",
              "      <td>0.376333</td>\n",
              "      <td>0.715224</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.479144</td>\n",
              "      <td>0.197915</td>\n",
              "      <td>0.439031</td>\n",
              "      <td>0.561427</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.481644</td>\n",
              "      <td>0.166368</td>\n",
              "      <td>0.419121</td>\n",
              "      <td>0.610642</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.496257</td>\n",
              "      <td>0.168700</td>\n",
              "      <td>0.378277</td>\n",
              "      <td>0.683534</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.321429</td>\n",
              "      <td>0.555503</td>\n",
              "      <td>0.159824</td>\n",
              "      <td>0.395108</td>\n",
              "      <td>0.731517</td>\n",
              "      <td>0.3125</td>\n",
              "      <td>0.357143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>0.411345</td>\n",
              "      <td>0.201961</td>\n",
              "      <td>0.257727</td>\n",
              "      <td>0.672813</td>\n",
              "      <td>0.6375</td>\n",
              "      <td>0.380952</td>\n",
              "      <td>0.426195</td>\n",
              "      <td>0.219204</td>\n",
              "      <td>0.128131</td>\n",
              "      <td>0.624664</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.511905</td>\n",
              "      <td>0.457796</td>\n",
              "      <td>0.327154</td>\n",
              "      <td>0.320295</td>\n",
              "      <td>0.420585</td>\n",
              "      <td>0.6250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.461896</td>\n",
              "      <td>0.188413</td>\n",
              "      <td>0.528324</td>\n",
              "      <td>0.387238</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.476190</td>\n",
              "      <td>0.434503</td>\n",
              "      <td>0.187702</td>\n",
              "      <td>0.516270</td>\n",
              "      <td>0.545075</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.467402</td>\n",
              "      <td>0.096816</td>\n",
              "      <td>0.526184</td>\n",
              "      <td>0.554185</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.418240</td>\n",
              "      <td>0.134696</td>\n",
              "      <td>0.506616</td>\n",
              "      <td>0.641702</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.408461</td>\n",
              "      <td>0.144328</td>\n",
              "      <td>0.547321</td>\n",
              "      <td>0.697341</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.439695</td>\n",
              "      <td>0.137528</td>\n",
              "      <td>0.720623</td>\n",
              "      <td>0.537250</td>\n",
              "      <td>0.3375</td>\n",
              "      <td>0.154762</td>\n",
              "      <td>0.364541</td>\n",
              "      <td>0.132048</td>\n",
              "      <td>0.603391</td>\n",
              "      <td>0.640624</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.343037</td>\n",
              "      <td>0.130208</td>\n",
              "      <td>0.738763</td>\n",
              "      <td>0.594819</td>\n",
              "      <td>0.5250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.368347</td>\n",
              "      <td>0.097674</td>\n",
              "      <td>0.685736</td>\n",
              "      <td>0.654657</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.369048</td>\n",
              "      <td>0.425352</td>\n",
              "      <td>0.118190</td>\n",
              "      <td>0.598919</td>\n",
              "      <td>0.688539</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.450995</td>\n",
              "      <td>0.137686</td>\n",
              "      <td>0.744050</td>\n",
              "      <td>0.613990</td>\n",
              "      <td>0.5750</td>\n",
              "      <td>0.190476</td>\n",
              "      <td>0.409609</td>\n",
              "      <td>0.078583</td>\n",
              "      <td>0.700908</td>\n",
              "      <td>0.689102</td>\n",
              "      <td>0.6750</td>\n",
              "      <td>0.285714</td>\n",
              "      <td>0.343684</td>\n",
              "      <td>0.060515</td>\n",
              "      <td>0.617550</td>\n",
              "      <td>0.775729</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.440476</td>\n",
              "      <td>0.352591</td>\n",
              "      <td>0.123189</td>\n",
              "      <td>0.711680</td>\n",
              "      <td>0.693210</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>0.345238</td>\n",
              "      <td>0.412945</td>\n",
              "      <td>0.091223</td>\n",
              "      <td>0.835963</td>\n",
              "      <td>0.494610</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.178571</td>\n",
              "      <td>0.396373</td>\n",
              "      <td>0.209147</td>\n",
              "      <td>0.732142</td>\n",
              "      <td>0.588208</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.130952</td>\n",
              "      <td>0.405463</td>\n",
              "      <td>0.125130</td>\n",
              "      <td>0.657801</td>\n",
              "      <td>0.645729</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.426895</td>\n",
              "      <td>0.221703</td>\n",
              "      <td>0.525527</td>\n",
              "      <td>0.658408</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.107143</td>\n",
              "      <td>0.537267</td>\n",
              "      <td>0.205896</td>\n",
              "      <td>0.444590</td>\n",
              "      <td>0.608583</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.604297</td>\n",
              "      <td>0.175516</td>\n",
              "      <td>0.383185</td>\n",
              "      <td>0.548935</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.589322</td>\n",
              "      <td>0.180045</td>\n",
              "      <td>0.360667</td>\n",
              "      <td>0.586397</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.495900</td>\n",
              "      <td>0.181460</td>\n",
              "      <td>0.408793</td>\n",
              "      <td>0.569134</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.473799</td>\n",
              "      <td>0.208035</td>\n",
              "      <td>0.508910</td>\n",
              "      <td>0.562290</td>\n",
              "      <td>0.4250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.466922</td>\n",
              "      <td>0.186655</td>\n",
              "      <td>0.448211</td>\n",
              "      <td>0.675020</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.424108</td>\n",
              "      <td>0.128532</td>\n",
              "      <td>0.487399</td>\n",
              "      <td>0.673676</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.438966</td>\n",
              "      <td>0.146584</td>\n",
              "      <td>0.424369</td>\n",
              "      <td>0.670745</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.475717</td>\n",
              "      <td>0.113534</td>\n",
              "      <td>0.403718</td>\n",
              "      <td>0.652827</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.453928</td>\n",
              "      <td>0.103208</td>\n",
              "      <td>0.389125</td>\n",
              "      <td>0.678741</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.425234</td>\n",
              "      <td>0.178162</td>\n",
              "      <td>0.376333</td>\n",
              "      <td>0.715224</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.479144</td>\n",
              "      <td>0.197915</td>\n",
              "      <td>0.439031</td>\n",
              "      <td>0.561427</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.481644</td>\n",
              "      <td>0.166368</td>\n",
              "      <td>0.419121</td>\n",
              "      <td>0.610642</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.496257</td>\n",
              "      <td>0.168700</td>\n",
              "      <td>0.378277</td>\n",
              "      <td>0.683534</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.321429</td>\n",
              "      <td>0.555503</td>\n",
              "      <td>0.159824</td>\n",
              "      <td>0.395108</td>\n",
              "      <td>0.731517</td>\n",
              "      <td>0.3125</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.608864</td>\n",
              "      <td>0.236947</td>\n",
              "      <td>0.339250</td>\n",
              "      <td>0.573008</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.202381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>0.426195</td>\n",
              "      <td>0.219204</td>\n",
              "      <td>0.128131</td>\n",
              "      <td>0.624664</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.511905</td>\n",
              "      <td>0.457796</td>\n",
              "      <td>0.327154</td>\n",
              "      <td>0.320295</td>\n",
              "      <td>0.420585</td>\n",
              "      <td>0.6250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.461896</td>\n",
              "      <td>0.188413</td>\n",
              "      <td>0.528324</td>\n",
              "      <td>0.387238</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.476190</td>\n",
              "      <td>0.434503</td>\n",
              "      <td>0.187702</td>\n",
              "      <td>0.516270</td>\n",
              "      <td>0.545075</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.467402</td>\n",
              "      <td>0.096816</td>\n",
              "      <td>0.526184</td>\n",
              "      <td>0.554185</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.418240</td>\n",
              "      <td>0.134696</td>\n",
              "      <td>0.506616</td>\n",
              "      <td>0.641702</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.408461</td>\n",
              "      <td>0.144328</td>\n",
              "      <td>0.547321</td>\n",
              "      <td>0.697341</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.439695</td>\n",
              "      <td>0.137528</td>\n",
              "      <td>0.720623</td>\n",
              "      <td>0.537250</td>\n",
              "      <td>0.3375</td>\n",
              "      <td>0.154762</td>\n",
              "      <td>0.364541</td>\n",
              "      <td>0.132048</td>\n",
              "      <td>0.603391</td>\n",
              "      <td>0.640624</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.343037</td>\n",
              "      <td>0.130208</td>\n",
              "      <td>0.738763</td>\n",
              "      <td>0.594819</td>\n",
              "      <td>0.5250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.368347</td>\n",
              "      <td>0.097674</td>\n",
              "      <td>0.685736</td>\n",
              "      <td>0.654657</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.369048</td>\n",
              "      <td>0.425352</td>\n",
              "      <td>0.118190</td>\n",
              "      <td>0.598919</td>\n",
              "      <td>0.688539</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.450995</td>\n",
              "      <td>0.137686</td>\n",
              "      <td>0.744050</td>\n",
              "      <td>0.613990</td>\n",
              "      <td>0.5750</td>\n",
              "      <td>0.190476</td>\n",
              "      <td>0.409609</td>\n",
              "      <td>0.078583</td>\n",
              "      <td>0.700908</td>\n",
              "      <td>0.689102</td>\n",
              "      <td>0.6750</td>\n",
              "      <td>0.285714</td>\n",
              "      <td>0.343684</td>\n",
              "      <td>0.060515</td>\n",
              "      <td>0.617550</td>\n",
              "      <td>0.775729</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.440476</td>\n",
              "      <td>0.352591</td>\n",
              "      <td>0.123189</td>\n",
              "      <td>0.711680</td>\n",
              "      <td>0.693210</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>0.345238</td>\n",
              "      <td>0.412945</td>\n",
              "      <td>0.091223</td>\n",
              "      <td>0.835963</td>\n",
              "      <td>0.494610</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.178571</td>\n",
              "      <td>0.396373</td>\n",
              "      <td>0.209147</td>\n",
              "      <td>0.732142</td>\n",
              "      <td>0.588208</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.130952</td>\n",
              "      <td>0.405463</td>\n",
              "      <td>0.125130</td>\n",
              "      <td>0.657801</td>\n",
              "      <td>0.645729</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.426895</td>\n",
              "      <td>0.221703</td>\n",
              "      <td>0.525527</td>\n",
              "      <td>0.658408</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.107143</td>\n",
              "      <td>0.537267</td>\n",
              "      <td>0.205896</td>\n",
              "      <td>0.444590</td>\n",
              "      <td>0.608583</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.604297</td>\n",
              "      <td>0.175516</td>\n",
              "      <td>0.383185</td>\n",
              "      <td>0.548935</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.589322</td>\n",
              "      <td>0.180045</td>\n",
              "      <td>0.360667</td>\n",
              "      <td>0.586397</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.495900</td>\n",
              "      <td>0.181460</td>\n",
              "      <td>0.408793</td>\n",
              "      <td>0.569134</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.473799</td>\n",
              "      <td>0.208035</td>\n",
              "      <td>0.508910</td>\n",
              "      <td>0.562290</td>\n",
              "      <td>0.4250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.466922</td>\n",
              "      <td>0.186655</td>\n",
              "      <td>0.448211</td>\n",
              "      <td>0.675020</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.424108</td>\n",
              "      <td>0.128532</td>\n",
              "      <td>0.487399</td>\n",
              "      <td>0.673676</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.438966</td>\n",
              "      <td>0.146584</td>\n",
              "      <td>0.424369</td>\n",
              "      <td>0.670745</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.475717</td>\n",
              "      <td>0.113534</td>\n",
              "      <td>0.403718</td>\n",
              "      <td>0.652827</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.453928</td>\n",
              "      <td>0.103208</td>\n",
              "      <td>0.389125</td>\n",
              "      <td>0.678741</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.425234</td>\n",
              "      <td>0.178162</td>\n",
              "      <td>0.376333</td>\n",
              "      <td>0.715224</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.479144</td>\n",
              "      <td>0.197915</td>\n",
              "      <td>0.439031</td>\n",
              "      <td>0.561427</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.481644</td>\n",
              "      <td>0.166368</td>\n",
              "      <td>0.419121</td>\n",
              "      <td>0.610642</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.496257</td>\n",
              "      <td>0.168700</td>\n",
              "      <td>0.378277</td>\n",
              "      <td>0.683534</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.321429</td>\n",
              "      <td>0.555503</td>\n",
              "      <td>0.159824</td>\n",
              "      <td>0.395108</td>\n",
              "      <td>0.731517</td>\n",
              "      <td>0.3125</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.608864</td>\n",
              "      <td>0.236947</td>\n",
              "      <td>0.339250</td>\n",
              "      <td>0.573008</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.202381</td>\n",
              "      <td>0.610411</td>\n",
              "      <td>0.112996</td>\n",
              "      <td>0.335223</td>\n",
              "      <td>0.615920</td>\n",
              "      <td>0.8125</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>0.457796</td>\n",
              "      <td>0.327154</td>\n",
              "      <td>0.320295</td>\n",
              "      <td>0.420585</td>\n",
              "      <td>0.6250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.461896</td>\n",
              "      <td>0.188413</td>\n",
              "      <td>0.528324</td>\n",
              "      <td>0.387238</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.476190</td>\n",
              "      <td>0.434503</td>\n",
              "      <td>0.187702</td>\n",
              "      <td>0.516270</td>\n",
              "      <td>0.545075</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.467402</td>\n",
              "      <td>0.096816</td>\n",
              "      <td>0.526184</td>\n",
              "      <td>0.554185</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.418240</td>\n",
              "      <td>0.134696</td>\n",
              "      <td>0.506616</td>\n",
              "      <td>0.641702</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.408461</td>\n",
              "      <td>0.144328</td>\n",
              "      <td>0.547321</td>\n",
              "      <td>0.697341</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.439695</td>\n",
              "      <td>0.137528</td>\n",
              "      <td>0.720623</td>\n",
              "      <td>0.537250</td>\n",
              "      <td>0.3375</td>\n",
              "      <td>0.154762</td>\n",
              "      <td>0.364541</td>\n",
              "      <td>0.132048</td>\n",
              "      <td>0.603391</td>\n",
              "      <td>0.640624</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.343037</td>\n",
              "      <td>0.130208</td>\n",
              "      <td>0.738763</td>\n",
              "      <td>0.594819</td>\n",
              "      <td>0.5250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.368347</td>\n",
              "      <td>0.097674</td>\n",
              "      <td>0.685736</td>\n",
              "      <td>0.654657</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.369048</td>\n",
              "      <td>0.425352</td>\n",
              "      <td>0.118190</td>\n",
              "      <td>0.598919</td>\n",
              "      <td>0.688539</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.450995</td>\n",
              "      <td>0.137686</td>\n",
              "      <td>0.744050</td>\n",
              "      <td>0.613990</td>\n",
              "      <td>0.5750</td>\n",
              "      <td>0.190476</td>\n",
              "      <td>0.409609</td>\n",
              "      <td>0.078583</td>\n",
              "      <td>0.700908</td>\n",
              "      <td>0.689102</td>\n",
              "      <td>0.6750</td>\n",
              "      <td>0.285714</td>\n",
              "      <td>0.343684</td>\n",
              "      <td>0.060515</td>\n",
              "      <td>0.617550</td>\n",
              "      <td>0.775729</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.440476</td>\n",
              "      <td>0.352591</td>\n",
              "      <td>0.123189</td>\n",
              "      <td>0.711680</td>\n",
              "      <td>0.693210</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>0.345238</td>\n",
              "      <td>0.412945</td>\n",
              "      <td>0.091223</td>\n",
              "      <td>0.835963</td>\n",
              "      <td>0.494610</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.178571</td>\n",
              "      <td>0.396373</td>\n",
              "      <td>0.209147</td>\n",
              "      <td>0.732142</td>\n",
              "      <td>0.588208</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.130952</td>\n",
              "      <td>0.405463</td>\n",
              "      <td>0.125130</td>\n",
              "      <td>0.657801</td>\n",
              "      <td>0.645729</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.426895</td>\n",
              "      <td>0.221703</td>\n",
              "      <td>0.525527</td>\n",
              "      <td>0.658408</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.107143</td>\n",
              "      <td>0.537267</td>\n",
              "      <td>0.205896</td>\n",
              "      <td>0.444590</td>\n",
              "      <td>0.608583</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.604297</td>\n",
              "      <td>0.175516</td>\n",
              "      <td>0.383185</td>\n",
              "      <td>0.548935</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.250000</td>\n",
              "      <td>0.589322</td>\n",
              "      <td>0.180045</td>\n",
              "      <td>0.360667</td>\n",
              "      <td>0.586397</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.495900</td>\n",
              "      <td>0.181460</td>\n",
              "      <td>0.408793</td>\n",
              "      <td>0.569134</td>\n",
              "      <td>0.5375</td>\n",
              "      <td>0.238095</td>\n",
              "      <td>0.473799</td>\n",
              "      <td>0.208035</td>\n",
              "      <td>0.508910</td>\n",
              "      <td>0.562290</td>\n",
              "      <td>0.4250</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.466922</td>\n",
              "      <td>0.186655</td>\n",
              "      <td>0.448211</td>\n",
              "      <td>0.675020</td>\n",
              "      <td>0.4625</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.424108</td>\n",
              "      <td>0.128532</td>\n",
              "      <td>0.487399</td>\n",
              "      <td>0.673676</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.438966</td>\n",
              "      <td>0.146584</td>\n",
              "      <td>0.424369</td>\n",
              "      <td>0.670745</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.261905</td>\n",
              "      <td>0.475717</td>\n",
              "      <td>0.113534</td>\n",
              "      <td>0.403718</td>\n",
              "      <td>0.652827</td>\n",
              "      <td>0.3625</td>\n",
              "      <td>0.273810</td>\n",
              "      <td>0.453928</td>\n",
              "      <td>0.103208</td>\n",
              "      <td>0.389125</td>\n",
              "      <td>0.678741</td>\n",
              "      <td>0.4125</td>\n",
              "      <td>0.214286</td>\n",
              "      <td>0.425234</td>\n",
              "      <td>0.178162</td>\n",
              "      <td>0.376333</td>\n",
              "      <td>0.715224</td>\n",
              "      <td>0.2375</td>\n",
              "      <td>0.226190</td>\n",
              "      <td>0.479144</td>\n",
              "      <td>0.197915</td>\n",
              "      <td>0.439031</td>\n",
              "      <td>0.561427</td>\n",
              "      <td>0.4375</td>\n",
              "      <td>0.142857</td>\n",
              "      <td>0.481644</td>\n",
              "      <td>0.166368</td>\n",
              "      <td>0.419121</td>\n",
              "      <td>0.610642</td>\n",
              "      <td>0.5000</td>\n",
              "      <td>0.297619</td>\n",
              "      <td>0.496257</td>\n",
              "      <td>0.168700</td>\n",
              "      <td>0.378277</td>\n",
              "      <td>0.683534</td>\n",
              "      <td>0.4875</td>\n",
              "      <td>0.321429</td>\n",
              "      <td>0.555503</td>\n",
              "      <td>0.159824</td>\n",
              "      <td>0.395108</td>\n",
              "      <td>0.731517</td>\n",
              "      <td>0.3125</td>\n",
              "      <td>0.357143</td>\n",
              "      <td>0.608864</td>\n",
              "      <td>0.236947</td>\n",
              "      <td>0.339250</td>\n",
              "      <td>0.573008</td>\n",
              "      <td>0.5875</td>\n",
              "      <td>0.202381</td>\n",
              "      <td>0.610411</td>\n",
              "      <td>0.112996</td>\n",
              "      <td>0.335223</td>\n",
              "      <td>0.615920</td>\n",
              "      <td>0.8125</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.552123</td>\n",
              "      <td>0.064826</td>\n",
              "      <td>0.475290</td>\n",
              "      <td>0.628066</td>\n",
              "      <td>0.4500</td>\n",
              "      <td>0.726190</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fdab653-0d49-44f2-90f2-8105ecdd1bbe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5fdab653-0d49-44f2-90f2-8105ecdd1bbe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5fdab653-0d49-44f2-90f2-8105ecdd1bbe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    pressure(t-30)  wind_speed(t-30)  humidity(t-30)  temperature(t-30)  \\\n",
              "30        0.538021          0.219516        0.454343           0.535788   \n",
              "31        0.413782          0.188950        0.375677           0.651000   \n",
              "32        0.411345          0.201961        0.257727           0.672813   \n",
              "33        0.426195          0.219204        0.128131           0.624664   \n",
              "34        0.457796          0.327154        0.320295           0.420585   \n",
              "\n",
              "    PM10(t-30)  PM2.5(t-30)  pressure(t-29)  wind_speed(t-29)  humidity(t-29)  \\\n",
              "30      0.5375     0.416667        0.413782          0.188950        0.375677   \n",
              "31      0.5125     0.416667        0.411345          0.201961        0.257727   \n",
              "32      0.6375     0.380952        0.426195          0.219204        0.128131   \n",
              "33      0.5000     0.511905        0.457796          0.327154        0.320295   \n",
              "34      0.6250     0.297619        0.461896          0.188413        0.528324   \n",
              "\n",
              "    temperature(t-29)  PM10(t-29)  PM2.5(t-29)  pressure(t-28)  \\\n",
              "30           0.651000      0.5125     0.416667        0.411345   \n",
              "31           0.672813      0.6375     0.380952        0.426195   \n",
              "32           0.624664      0.5000     0.511905        0.457796   \n",
              "33           0.420585      0.6250     0.297619        0.461896   \n",
              "34           0.387238      0.5000     0.476190        0.434503   \n",
              "\n",
              "    wind_speed(t-28)  humidity(t-28)  temperature(t-28)  PM10(t-28)  \\\n",
              "30          0.201961        0.257727           0.672813      0.6375   \n",
              "31          0.219204        0.128131           0.624664      0.5000   \n",
              "32          0.327154        0.320295           0.420585      0.6250   \n",
              "33          0.188413        0.528324           0.387238      0.5000   \n",
              "34          0.187702        0.516270           0.545075      0.4625   \n",
              "\n",
              "    PM2.5(t-28)  pressure(t-27)  wind_speed(t-27)  humidity(t-27)  \\\n",
              "30     0.380952        0.426195          0.219204        0.128131   \n",
              "31     0.511905        0.457796          0.327154        0.320295   \n",
              "32     0.297619        0.461896          0.188413        0.528324   \n",
              "33     0.476190        0.434503          0.187702        0.516270   \n",
              "34     0.357143        0.467402          0.096816        0.526184   \n",
              "\n",
              "    temperature(t-27)  PM10(t-27)  PM2.5(t-27)  pressure(t-26)  \\\n",
              "30           0.624664      0.5000     0.511905        0.457796   \n",
              "31           0.420585      0.6250     0.297619        0.461896   \n",
              "32           0.387238      0.5000     0.476190        0.434503   \n",
              "33           0.545075      0.4625     0.357143        0.467402   \n",
              "34           0.554185      0.4125     0.333333        0.418240   \n",
              "\n",
              "    wind_speed(t-26)  humidity(t-26)  temperature(t-26)  PM10(t-26)  \\\n",
              "30          0.327154        0.320295           0.420585      0.6250   \n",
              "31          0.188413        0.528324           0.387238      0.5000   \n",
              "32          0.187702        0.516270           0.545075      0.4625   \n",
              "33          0.096816        0.526184           0.554185      0.4125   \n",
              "34          0.134696        0.506616           0.641702      0.4125   \n",
              "\n",
              "    PM2.5(t-26)  pressure(t-25)  wind_speed(t-25)  humidity(t-25)  \\\n",
              "30     0.297619        0.461896          0.188413        0.528324   \n",
              "31     0.476190        0.434503          0.187702        0.516270   \n",
              "32     0.357143        0.467402          0.096816        0.526184   \n",
              "33     0.333333        0.418240          0.134696        0.506616   \n",
              "34     0.250000        0.408461          0.144328        0.547321   \n",
              "\n",
              "    temperature(t-25)  PM10(t-25)  PM2.5(t-25)  pressure(t-24)  \\\n",
              "30           0.387238      0.5000     0.476190        0.434503   \n",
              "31           0.545075      0.4625     0.357143        0.467402   \n",
              "32           0.554185      0.4125     0.333333        0.418240   \n",
              "33           0.641702      0.4125     0.250000        0.408461   \n",
              "34           0.697341      0.2875     0.238095        0.439695   \n",
              "\n",
              "    wind_speed(t-24)  humidity(t-24)  temperature(t-24)  PM10(t-24)  \\\n",
              "30          0.187702        0.516270           0.545075      0.4625   \n",
              "31          0.096816        0.526184           0.554185      0.4125   \n",
              "32          0.134696        0.506616           0.641702      0.4125   \n",
              "33          0.144328        0.547321           0.697341      0.2875   \n",
              "34          0.137528        0.720623           0.537250      0.3375   \n",
              "\n",
              "    PM2.5(t-24)  pressure(t-23)  wind_speed(t-23)  humidity(t-23)  \\\n",
              "30     0.357143        0.467402          0.096816        0.526184   \n",
              "31     0.333333        0.418240          0.134696        0.506616   \n",
              "32     0.250000        0.408461          0.144328        0.547321   \n",
              "33     0.238095        0.439695          0.137528        0.720623   \n",
              "34     0.154762        0.364541          0.132048        0.603391   \n",
              "\n",
              "    temperature(t-23)  PM10(t-23)  PM2.5(t-23)  pressure(t-22)  \\\n",
              "30           0.554185      0.4125     0.333333        0.418240   \n",
              "31           0.641702      0.4125     0.250000        0.408461   \n",
              "32           0.697341      0.2875     0.238095        0.439695   \n",
              "33           0.537250      0.3375     0.154762        0.364541   \n",
              "34           0.640624      0.4625     0.214286        0.343037   \n",
              "\n",
              "    wind_speed(t-22)  humidity(t-22)  temperature(t-22)  PM10(t-22)  \\\n",
              "30          0.134696        0.506616           0.641702      0.4125   \n",
              "31          0.144328        0.547321           0.697341      0.2875   \n",
              "32          0.137528        0.720623           0.537250      0.3375   \n",
              "33          0.132048        0.603391           0.640624      0.4625   \n",
              "34          0.130208        0.738763           0.594819      0.5250   \n",
              "\n",
              "    PM2.5(t-22)  pressure(t-21)  wind_speed(t-21)  humidity(t-21)  \\\n",
              "30     0.250000        0.408461          0.144328        0.547321   \n",
              "31     0.238095        0.439695          0.137528        0.720623   \n",
              "32     0.154762        0.364541          0.132048        0.603391   \n",
              "33     0.214286        0.343037          0.130208        0.738763   \n",
              "34     0.297619        0.368347          0.097674        0.685736   \n",
              "\n",
              "    temperature(t-21)  PM10(t-21)  PM2.5(t-21)  pressure(t-20)  \\\n",
              "30           0.697341      0.2875     0.238095        0.439695   \n",
              "31           0.537250      0.3375     0.154762        0.364541   \n",
              "32           0.640624      0.4625     0.214286        0.343037   \n",
              "33           0.594819      0.5250     0.297619        0.368347   \n",
              "34           0.654657      0.5875     0.369048        0.425352   \n",
              "\n",
              "    wind_speed(t-20)  humidity(t-20)  temperature(t-20)  PM10(t-20)  \\\n",
              "30          0.137528        0.720623           0.537250      0.3375   \n",
              "31          0.132048        0.603391           0.640624      0.4625   \n",
              "32          0.130208        0.738763           0.594819      0.5250   \n",
              "33          0.097674        0.685736           0.654657      0.5875   \n",
              "34          0.118190        0.598919           0.688539      0.3625   \n",
              "\n",
              "    PM2.5(t-20)  pressure(t-19)  wind_speed(t-19)  humidity(t-19)  \\\n",
              "30     0.154762        0.364541          0.132048        0.603391   \n",
              "31     0.214286        0.343037          0.130208        0.738763   \n",
              "32     0.297619        0.368347          0.097674        0.685736   \n",
              "33     0.369048        0.425352          0.118190        0.598919   \n",
              "34     0.357143        0.450995          0.137686        0.744050   \n",
              "\n",
              "    temperature(t-19)  PM10(t-19)  PM2.5(t-19)  pressure(t-18)  \\\n",
              "30           0.640624      0.4625     0.214286        0.343037   \n",
              "31           0.594819      0.5250     0.297619        0.368347   \n",
              "32           0.654657      0.5875     0.369048        0.425352   \n",
              "33           0.688539      0.3625     0.357143        0.450995   \n",
              "34           0.613990      0.5750     0.190476        0.409609   \n",
              "\n",
              "    wind_speed(t-18)  humidity(t-18)  temperature(t-18)  PM10(t-18)  \\\n",
              "30          0.130208        0.738763           0.594819      0.5250   \n",
              "31          0.097674        0.685736           0.654657      0.5875   \n",
              "32          0.118190        0.598919           0.688539      0.3625   \n",
              "33          0.137686        0.744050           0.613990      0.5750   \n",
              "34          0.078583        0.700908           0.689102      0.6750   \n",
              "\n",
              "    PM2.5(t-18)  pressure(t-17)  wind_speed(t-17)  humidity(t-17)  \\\n",
              "30     0.297619        0.368347          0.097674        0.685736   \n",
              "31     0.369048        0.425352          0.118190        0.598919   \n",
              "32     0.357143        0.450995          0.137686        0.744050   \n",
              "33     0.190476        0.409609          0.078583        0.700908   \n",
              "34     0.285714        0.343684          0.060515        0.617550   \n",
              "\n",
              "    temperature(t-17)  PM10(t-17)  PM2.5(t-17)  pressure(t-16)  \\\n",
              "30           0.654657      0.5875     0.369048        0.425352   \n",
              "31           0.688539      0.3625     0.357143        0.450995   \n",
              "32           0.613990      0.5750     0.190476        0.409609   \n",
              "33           0.689102      0.6750     0.285714        0.343684   \n",
              "34           0.775729      0.5375     0.440476        0.352591   \n",
              "\n",
              "    wind_speed(t-16)  humidity(t-16)  temperature(t-16)  PM10(t-16)  \\\n",
              "30          0.118190        0.598919           0.688539      0.3625   \n",
              "31          0.137686        0.744050           0.613990      0.5750   \n",
              "32          0.078583        0.700908           0.689102      0.6750   \n",
              "33          0.060515        0.617550           0.775729      0.5375   \n",
              "34          0.123189        0.711680           0.693210      0.3250   \n",
              "\n",
              "    PM2.5(t-16)  pressure(t-15)  wind_speed(t-15)  humidity(t-15)  \\\n",
              "30     0.357143        0.450995          0.137686        0.744050   \n",
              "31     0.190476        0.409609          0.078583        0.700908   \n",
              "32     0.285714        0.343684          0.060515        0.617550   \n",
              "33     0.440476        0.352591          0.123189        0.711680   \n",
              "34     0.345238        0.412945          0.091223        0.835963   \n",
              "\n",
              "    temperature(t-15)  PM10(t-15)  PM2.5(t-15)  pressure(t-14)  \\\n",
              "30           0.613990      0.5750     0.190476        0.409609   \n",
              "31           0.689102      0.6750     0.285714        0.343684   \n",
              "32           0.775729      0.5375     0.440476        0.352591   \n",
              "33           0.693210      0.3250     0.345238        0.412945   \n",
              "34           0.494610      0.2375     0.178571        0.396373   \n",
              "\n",
              "    wind_speed(t-14)  humidity(t-14)  temperature(t-14)  PM10(t-14)  \\\n",
              "30          0.078583        0.700908           0.689102      0.6750   \n",
              "31          0.060515        0.617550           0.775729      0.5375   \n",
              "32          0.123189        0.711680           0.693210      0.3250   \n",
              "33          0.091223        0.835963           0.494610      0.2375   \n",
              "34          0.209147        0.732142           0.588208      0.4000   \n",
              "\n",
              "    PM2.5(t-14)  pressure(t-13)  wind_speed(t-13)  humidity(t-13)  \\\n",
              "30     0.285714        0.343684          0.060515        0.617550   \n",
              "31     0.440476        0.352591          0.123189        0.711680   \n",
              "32     0.345238        0.412945          0.091223        0.835963   \n",
              "33     0.178571        0.396373          0.209147        0.732142   \n",
              "34     0.130952        0.405463          0.125130        0.657801   \n",
              "\n",
              "    temperature(t-13)  PM10(t-13)  PM2.5(t-13)  pressure(t-12)  \\\n",
              "30           0.775729      0.5375     0.440476        0.352591   \n",
              "31           0.693210      0.3250     0.345238        0.412945   \n",
              "32           0.494610      0.2375     0.178571        0.396373   \n",
              "33           0.588208      0.4000     0.130952        0.405463   \n",
              "34           0.645729      0.1875     0.226190        0.426895   \n",
              "\n",
              "    wind_speed(t-12)  humidity(t-12)  temperature(t-12)  PM10(t-12)  \\\n",
              "30          0.123189        0.711680           0.693210      0.3250   \n",
              "31          0.091223        0.835963           0.494610      0.2375   \n",
              "32          0.209147        0.732142           0.588208      0.4000   \n",
              "33          0.125130        0.657801           0.645729      0.1875   \n",
              "34          0.221703        0.525527           0.658408      0.2750   \n",
              "\n",
              "    PM2.5(t-12)  pressure(t-11)  wind_speed(t-11)  humidity(t-11)  \\\n",
              "30     0.345238        0.412945          0.091223        0.835963   \n",
              "31     0.178571        0.396373          0.209147        0.732142   \n",
              "32     0.130952        0.405463          0.125130        0.657801   \n",
              "33     0.226190        0.426895          0.221703        0.525527   \n",
              "34     0.107143        0.537267          0.205896        0.444590   \n",
              "\n",
              "    temperature(t-11)  PM10(t-11)  PM2.5(t-11)  pressure(t-10)  \\\n",
              "30           0.494610      0.2375     0.178571        0.396373   \n",
              "31           0.588208      0.4000     0.130952        0.405463   \n",
              "32           0.645729      0.1875     0.226190        0.426895   \n",
              "33           0.658408      0.2750     0.107143        0.537267   \n",
              "34           0.608583      0.5000     0.142857        0.604297   \n",
              "\n",
              "    wind_speed(t-10)  humidity(t-10)  temperature(t-10)  PM10(t-10)  \\\n",
              "30          0.209147        0.732142           0.588208      0.4000   \n",
              "31          0.125130        0.657801           0.645729      0.1875   \n",
              "32          0.221703        0.525527           0.658408      0.2750   \n",
              "33          0.205896        0.444590           0.608583      0.5000   \n",
              "34          0.175516        0.383185           0.548935      0.4875   \n",
              "\n",
              "    PM2.5(t-10)  pressure(t-9)  wind_speed(t-9)  humidity(t-9)  \\\n",
              "30     0.130952       0.405463         0.125130       0.657801   \n",
              "31     0.226190       0.426895         0.221703       0.525527   \n",
              "32     0.107143       0.537267         0.205896       0.444590   \n",
              "33     0.142857       0.604297         0.175516       0.383185   \n",
              "34     0.250000       0.589322         0.180045       0.360667   \n",
              "\n",
              "    temperature(t-9)  PM10(t-9)  PM2.5(t-9)  pressure(t-8)  wind_speed(t-8)  \\\n",
              "30          0.645729     0.1875    0.226190       0.426895         0.221703   \n",
              "31          0.658408     0.2750    0.107143       0.537267         0.205896   \n",
              "32          0.608583     0.5000    0.142857       0.604297         0.175516   \n",
              "33          0.548935     0.4875    0.250000       0.589322         0.180045   \n",
              "34          0.586397     0.4875    0.273810       0.495900         0.181460   \n",
              "\n",
              "    humidity(t-8)  temperature(t-8)  PM10(t-8)  PM2.5(t-8)  pressure(t-7)  \\\n",
              "30       0.525527          0.658408     0.2750    0.107143       0.537267   \n",
              "31       0.444590          0.608583     0.5000    0.142857       0.604297   \n",
              "32       0.383185          0.548935     0.4875    0.250000       0.589322   \n",
              "33       0.360667          0.586397     0.4875    0.273810       0.495900   \n",
              "34       0.408793          0.569134     0.5375    0.238095       0.473799   \n",
              "\n",
              "    wind_speed(t-7)  humidity(t-7)  temperature(t-7)  PM10(t-7)  PM2.5(t-7)  \\\n",
              "30         0.205896       0.444590          0.608583     0.5000    0.142857   \n",
              "31         0.175516       0.383185          0.548935     0.4875    0.250000   \n",
              "32         0.180045       0.360667          0.586397     0.4875    0.273810   \n",
              "33         0.181460       0.408793          0.569134     0.5375    0.238095   \n",
              "34         0.208035       0.508910          0.562290     0.4250    0.297619   \n",
              "\n",
              "    pressure(t-6)  wind_speed(t-6)  humidity(t-6)  temperature(t-6)  \\\n",
              "30       0.604297         0.175516       0.383185          0.548935   \n",
              "31       0.589322         0.180045       0.360667          0.586397   \n",
              "32       0.495900         0.181460       0.408793          0.569134   \n",
              "33       0.473799         0.208035       0.508910          0.562290   \n",
              "34       0.466922         0.186655       0.448211          0.675020   \n",
              "\n",
              "    PM10(t-6)  PM2.5(t-6)  pressure(t-5)  wind_speed(t-5)  humidity(t-5)  \\\n",
              "30     0.4875    0.250000       0.589322         0.180045       0.360667   \n",
              "31     0.4875    0.273810       0.495900         0.181460       0.408793   \n",
              "32     0.5375    0.238095       0.473799         0.208035       0.508910   \n",
              "33     0.4250    0.297619       0.466922         0.186655       0.448211   \n",
              "34     0.4625    0.226190       0.424108         0.128532       0.487399   \n",
              "\n",
              "    temperature(t-5)  PM10(t-5)  PM2.5(t-5)  pressure(t-4)  wind_speed(t-4)  \\\n",
              "30          0.586397     0.4875    0.273810       0.495900         0.181460   \n",
              "31          0.569134     0.5375    0.238095       0.473799         0.208035   \n",
              "32          0.562290     0.4250    0.297619       0.466922         0.186655   \n",
              "33          0.675020     0.4625    0.226190       0.424108         0.128532   \n",
              "34          0.673676     0.4375    0.261905       0.438966         0.146584   \n",
              "\n",
              "    humidity(t-4)  temperature(t-4)  PM10(t-4)  PM2.5(t-4)  pressure(t-3)  \\\n",
              "30       0.408793          0.569134     0.5375    0.238095       0.473799   \n",
              "31       0.508910          0.562290     0.4250    0.297619       0.466922   \n",
              "32       0.448211          0.675020     0.4625    0.226190       0.424108   \n",
              "33       0.487399          0.673676     0.4375    0.261905       0.438966   \n",
              "34       0.424369          0.670745     0.4875    0.261905       0.475717   \n",
              "\n",
              "    wind_speed(t-3)  humidity(t-3)  temperature(t-3)  PM10(t-3)  PM2.5(t-3)  \\\n",
              "30         0.208035       0.508910          0.562290     0.4250    0.297619   \n",
              "31         0.186655       0.448211          0.675020     0.4625    0.226190   \n",
              "32         0.128532       0.487399          0.673676     0.4375    0.261905   \n",
              "33         0.146584       0.424369          0.670745     0.4875    0.261905   \n",
              "34         0.113534       0.403718          0.652827     0.3625    0.273810   \n",
              "\n",
              "    pressure(t-2)  wind_speed(t-2)  humidity(t-2)  temperature(t-2)  \\\n",
              "30       0.466922         0.186655       0.448211          0.675020   \n",
              "31       0.424108         0.128532       0.487399          0.673676   \n",
              "32       0.438966         0.146584       0.424369          0.670745   \n",
              "33       0.475717         0.113534       0.403718          0.652827   \n",
              "34       0.453928         0.103208       0.389125          0.678741   \n",
              "\n",
              "    PM10(t-2)  PM2.5(t-2)  pressure(t-1)  wind_speed(t-1)  humidity(t-1)  \\\n",
              "30     0.4625    0.226190       0.424108         0.128532       0.487399   \n",
              "31     0.4375    0.261905       0.438966         0.146584       0.424369   \n",
              "32     0.4875    0.261905       0.475717         0.113534       0.403718   \n",
              "33     0.3625    0.273810       0.453928         0.103208       0.389125   \n",
              "34     0.4125    0.214286       0.425234         0.178162       0.376333   \n",
              "\n",
              "    temperature(t-1)  PM10(t-1)  PM2.5(t-1)  pressure(t)  wind_speed(t)  \\\n",
              "30          0.673676     0.4375    0.261905     0.438966       0.146584   \n",
              "31          0.670745     0.4875    0.261905     0.475717       0.113534   \n",
              "32          0.652827     0.3625    0.273810     0.453928       0.103208   \n",
              "33          0.678741     0.4125    0.214286     0.425234       0.178162   \n",
              "34          0.715224     0.2375    0.226190     0.479144       0.197915   \n",
              "\n",
              "    humidity(t)  temperature(t)  PM10(t)  PM2.5(t)  pressure(t+1)  \\\n",
              "30     0.424369        0.670745   0.4875  0.261905       0.475717   \n",
              "31     0.403718        0.652827   0.3625  0.273810       0.453928   \n",
              "32     0.389125        0.678741   0.4125  0.214286       0.425234   \n",
              "33     0.376333        0.715224   0.2375  0.226190       0.479144   \n",
              "34     0.439031        0.561427   0.4375  0.142857       0.481644   \n",
              "\n",
              "    wind_speed(t+1)  humidity(t+1)  temperature(t+1)  PM10(t+1)  PM2.5(t+1)  \\\n",
              "30         0.113534       0.403718          0.652827     0.3625    0.273810   \n",
              "31         0.103208       0.389125          0.678741     0.4125    0.214286   \n",
              "32         0.178162       0.376333          0.715224     0.2375    0.226190   \n",
              "33         0.197915       0.439031          0.561427     0.4375    0.142857   \n",
              "34         0.166368       0.419121          0.610642     0.5000    0.297619   \n",
              "\n",
              "    pressure(t+2)  wind_speed(t+2)  humidity(t+2)  temperature(t+2)  \\\n",
              "30       0.453928         0.103208       0.389125          0.678741   \n",
              "31       0.425234         0.178162       0.376333          0.715224   \n",
              "32       0.479144         0.197915       0.439031          0.561427   \n",
              "33       0.481644         0.166368       0.419121          0.610642   \n",
              "34       0.496257         0.168700       0.378277          0.683534   \n",
              "\n",
              "    PM10(t+2)  PM2.5(t+2)  pressure(t+3)  wind_speed(t+3)  humidity(t+3)  \\\n",
              "30     0.4125    0.214286       0.425234         0.178162       0.376333   \n",
              "31     0.2375    0.226190       0.479144         0.197915       0.439031   \n",
              "32     0.4375    0.142857       0.481644         0.166368       0.419121   \n",
              "33     0.5000    0.297619       0.496257         0.168700       0.378277   \n",
              "34     0.4875    0.321429       0.555503         0.159824       0.395108   \n",
              "\n",
              "    temperature(t+3)  PM10(t+3)  PM2.5(t+3)  pressure(t+4)  wind_speed(t+4)  \\\n",
              "30          0.715224     0.2375    0.226190       0.479144         0.197915   \n",
              "31          0.561427     0.4375    0.142857       0.481644         0.166368   \n",
              "32          0.610642     0.5000    0.297619       0.496257         0.168700   \n",
              "33          0.683534     0.4875    0.321429       0.555503         0.159824   \n",
              "34          0.731517     0.3125    0.357143       0.608864         0.236947   \n",
              "\n",
              "    humidity(t+4)  temperature(t+4)  PM10(t+4)  PM2.5(t+4)  pressure(t+5)  \\\n",
              "30       0.439031          0.561427     0.4375    0.142857       0.481644   \n",
              "31       0.419121          0.610642     0.5000    0.297619       0.496257   \n",
              "32       0.378277          0.683534     0.4875    0.321429       0.555503   \n",
              "33       0.395108          0.731517     0.3125    0.357143       0.608864   \n",
              "34       0.339250          0.573008     0.5875    0.202381       0.610411   \n",
              "\n",
              "    wind_speed(t+5)  humidity(t+5)  temperature(t+5)  PM10(t+5)  PM2.5(t+5)  \\\n",
              "30         0.166368       0.419121          0.610642     0.5000    0.297619   \n",
              "31         0.168700       0.378277          0.683534     0.4875    0.321429   \n",
              "32         0.159824       0.395108          0.731517     0.3125    0.357143   \n",
              "33         0.236947       0.339250          0.573008     0.5875    0.202381   \n",
              "34         0.112996       0.335223          0.615920     0.8125    0.500000   \n",
              "\n",
              "    pressure(t+6)  wind_speed(t+6)  humidity(t+6)  temperature(t+6)  \\\n",
              "30       0.496257         0.168700       0.378277          0.683534   \n",
              "31       0.555503         0.159824       0.395108          0.731517   \n",
              "32       0.608864         0.236947       0.339250          0.573008   \n",
              "33       0.610411         0.112996       0.335223          0.615920   \n",
              "34       0.552123         0.064826       0.475290          0.628066   \n",
              "\n",
              "    PM10(t+6)  PM2.5(t+6)  \n",
              "30     0.4875    0.321429  \n",
              "31     0.3125    0.357143  \n",
              "32     0.5875    0.202381  \n",
              "33     0.8125    0.500000  \n",
              "34     0.4500    0.726190  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YAOmKueRJ8Fc"
      },
      "source": [
        "reframed.drop(['pressure(t)','wind_speed(t)','humidity(t)','temperature(t)','PM10(t)','pressure(t+1)','wind_speed(t+1)','humidity(t+1)','temperature(t+1)','PM10(t+1)','pressure(t+2)','wind_speed(t+2)','humidity(t+2)','temperature(t+2)','PM10(t+2)','pressure(t+3)','wind_speed(t+3)','humidity(t+3)','temperature(t+3)','PM10(t+3)','pressure(t+4)','wind_speed(t+4)','humidity(t+4)','temperature(t+4)','PM10(t+4)','pressure(t+5)','wind_speed(t+5)','humidity(t+5)','temperature(t+5)','PM10(t+5)','pressure(t+6)','wind_speed(t+6)','humidity(t+6)','temperature(t+6)','PM10(t+6)'],axis=1,inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oKTlTk1tdLzs"
      },
      "source": [
        "# แบ่งข้อมูล Train,Test (train ใช้สำหรับให้โมเดลเข้าใจทิศทางการทำงานของข้อมูลโดยศึกษาจาก Input+Output หลังจากนั้นทดสอบโมเดลโดยการ Test โดยให้โมเดลวิเคราะห์ Input และลอง Forcast Output)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rizwk3duJ8IK"
      },
      "source": [
        "# split into train and test sets\n",
        "values = reframed.values\n",
        "n_train_percent = 0.9\n",
        "split = int(values.shape[0]*0.9)\n",
        "train = values[:split, :]\n",
        "test = values[split:, :]\n",
        "date_reframed = dataset.index[reframed.index]\n",
        "date_train = date_reframed[:split]\n",
        "date_test = date_reframed[split:]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E7enxXOSeKQX"
      },
      "source": [
        "# แบ่ง Input,Output (Output = PM2.5(t)ที่เหลือเป็น Input)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l--M8q9Y8DGg"
      },
      "source": [
        "# split into input and outputs\n",
        "train_X, train_y = train[:, :-7], train[:, -7:]\n",
        "test_X, test_y = test[:, :-7], test[:, -7:]\n",
        "# reshape input to be 3D [samples, timesteps, features]\n",
        "train_X = train_X.reshape((train_X.shape[0], 1, train_X.shape[1]))\n",
        "test_X = test_X.reshape((test_X.shape[0], 1, test_X.shape[1]))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mKCbc7qX8DNd",
        "outputId": "dcb63b69-7005-4791-fe9f-ef3ff9797399"
      },
      "source": [
        "train_X.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1008, 1, 180)"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b9a1voWn8DSp",
        "outputId": "4a1b2320-e7bf-42ce-f56f-9f6e6feed185"
      },
      "source": [
        "train_y.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1008, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LtC5n56eEO9H",
        "outputId": "dac9fd5f-d917-437a-8df1-2ae7710375f0"
      },
      "source": [
        "test_y.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(113, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xGg0LoMFeRVP"
      },
      "source": [
        "# สร้างโมเดล กำหนด Optimizer+จูนพารามิเตอร์"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uoLAjf_K8DWS",
        "outputId": "7fd7bce2-6eb1-4c33-d10a-74b9bb6dc2e5"
      },
      "source": [
        "# design network\n",
        "model = Sequential()\n",
        "model.add(LSTM(50, input_shape=(train_X.shape[1], train_X.shape[2])))\n",
        "model.add(Dense(7))\n",
        "model.compile(loss='mae', optimizer='Adam')\n",
        "# fit network\n",
        "history = model.fit(train_X, train_y, epochs=100, batch_size=5, validation_data=(test_X, test_y), verbose=2, shuffle=False)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "202/202 - 3s - loss: 0.1253 - val_loss: 0.1383 - 3s/epoch - 16ms/step\n",
            "Epoch 2/100\n",
            "202/202 - 1s - loss: 0.1239 - val_loss: 0.1129 - 657ms/epoch - 3ms/step\n",
            "Epoch 3/100\n",
            "202/202 - 1s - loss: 0.1109 - val_loss: 0.0975 - 699ms/epoch - 3ms/step\n",
            "Epoch 4/100\n",
            "202/202 - 1s - loss: 0.1010 - val_loss: 0.0937 - 683ms/epoch - 3ms/step\n",
            "Epoch 5/100\n",
            "202/202 - 1s - loss: 0.0956 - val_loss: 0.0918 - 653ms/epoch - 3ms/step\n",
            "Epoch 6/100\n",
            "202/202 - 1s - loss: 0.0918 - val_loss: 0.0918 - 700ms/epoch - 3ms/step\n",
            "Epoch 7/100\n",
            "202/202 - 1s - loss: 0.0893 - val_loss: 0.0934 - 745ms/epoch - 4ms/step\n",
            "Epoch 8/100\n",
            "202/202 - 1s - loss: 0.0878 - val_loss: 0.0928 - 662ms/epoch - 3ms/step\n",
            "Epoch 9/100\n",
            "202/202 - 1s - loss: 0.0860 - val_loss: 0.0902 - 668ms/epoch - 3ms/step\n",
            "Epoch 10/100\n",
            "202/202 - 1s - loss: 0.0844 - val_loss: 0.0916 - 685ms/epoch - 3ms/step\n",
            "Epoch 11/100\n",
            "202/202 - 1s - loss: 0.0839 - val_loss: 0.0915 - 663ms/epoch - 3ms/step\n",
            "Epoch 12/100\n",
            "202/202 - 1s - loss: 0.0832 - val_loss: 0.0915 - 654ms/epoch - 3ms/step\n",
            "Epoch 13/100\n",
            "202/202 - 1s - loss: 0.0827 - val_loss: 0.0818 - 635ms/epoch - 3ms/step\n",
            "Epoch 14/100\n",
            "202/202 - 1s - loss: 0.0811 - val_loss: 0.0803 - 618ms/epoch - 3ms/step\n",
            "Epoch 15/100\n",
            "202/202 - 1s - loss: 0.0801 - val_loss: 0.0774 - 650ms/epoch - 3ms/step\n",
            "Epoch 16/100\n",
            "202/202 - 1s - loss: 0.0793 - val_loss: 0.0771 - 627ms/epoch - 3ms/step\n",
            "Epoch 17/100\n",
            "202/202 - 1s - loss: 0.0785 - val_loss: 0.0774 - 676ms/epoch - 3ms/step\n",
            "Epoch 18/100\n",
            "202/202 - 1s - loss: 0.0778 - val_loss: 0.0758 - 649ms/epoch - 3ms/step\n",
            "Epoch 19/100\n",
            "202/202 - 1s - loss: 0.0776 - val_loss: 0.0751 - 601ms/epoch - 3ms/step\n",
            "Epoch 20/100\n",
            "202/202 - 1s - loss: 0.0767 - val_loss: 0.0748 - 594ms/epoch - 3ms/step\n",
            "Epoch 21/100\n",
            "202/202 - 1s - loss: 0.0760 - val_loss: 0.0748 - 601ms/epoch - 3ms/step\n",
            "Epoch 22/100\n",
            "202/202 - 1s - loss: 0.0752 - val_loss: 0.0748 - 649ms/epoch - 3ms/step\n",
            "Epoch 23/100\n",
            "202/202 - 1s - loss: 0.0744 - val_loss: 0.0746 - 587ms/epoch - 3ms/step\n",
            "Epoch 24/100\n",
            "202/202 - 1s - loss: 0.0737 - val_loss: 0.0747 - 629ms/epoch - 3ms/step\n",
            "Epoch 25/100\n",
            "202/202 - 1s - loss: 0.0730 - val_loss: 0.0766 - 622ms/epoch - 3ms/step\n",
            "Epoch 26/100\n",
            "202/202 - 1s - loss: 0.0732 - val_loss: 0.0767 - 617ms/epoch - 3ms/step\n",
            "Epoch 27/100\n",
            "202/202 - 1s - loss: 0.0724 - val_loss: 0.0761 - 619ms/epoch - 3ms/step\n",
            "Epoch 28/100\n",
            "202/202 - 1s - loss: 0.0715 - val_loss: 0.0770 - 638ms/epoch - 3ms/step\n",
            "Epoch 29/100\n",
            "202/202 - 1s - loss: 0.0714 - val_loss: 0.0749 - 595ms/epoch - 3ms/step\n",
            "Epoch 30/100\n",
            "202/202 - 1s - loss: 0.0708 - val_loss: 0.0732 - 621ms/epoch - 3ms/step\n",
            "Epoch 31/100\n",
            "202/202 - 1s - loss: 0.0703 - val_loss: 0.0722 - 600ms/epoch - 3ms/step\n",
            "Epoch 32/100\n",
            "202/202 - 1s - loss: 0.0694 - val_loss: 0.0699 - 633ms/epoch - 3ms/step\n",
            "Epoch 33/100\n",
            "202/202 - 1s - loss: 0.0687 - val_loss: 0.0706 - 586ms/epoch - 3ms/step\n",
            "Epoch 34/100\n",
            "202/202 - 1s - loss: 0.0679 - val_loss: 0.0701 - 575ms/epoch - 3ms/step\n",
            "Epoch 35/100\n",
            "202/202 - 1s - loss: 0.0672 - val_loss: 0.0708 - 644ms/epoch - 3ms/step\n",
            "Epoch 36/100\n",
            "202/202 - 1s - loss: 0.0665 - val_loss: 0.0700 - 583ms/epoch - 3ms/step\n",
            "Epoch 37/100\n",
            "202/202 - 1s - loss: 0.0669 - val_loss: 0.0696 - 664ms/epoch - 3ms/step\n",
            "Epoch 38/100\n",
            "202/202 - 1s - loss: 0.0656 - val_loss: 0.0713 - 597ms/epoch - 3ms/step\n",
            "Epoch 39/100\n",
            "202/202 - 1s - loss: 0.0658 - val_loss: 0.0698 - 604ms/epoch - 3ms/step\n",
            "Epoch 40/100\n",
            "202/202 - 1s - loss: 0.0649 - val_loss: 0.0751 - 560ms/epoch - 3ms/step\n",
            "Epoch 41/100\n",
            "202/202 - 1s - loss: 0.0667 - val_loss: 0.0682 - 587ms/epoch - 3ms/step\n",
            "Epoch 42/100\n",
            "202/202 - 1s - loss: 0.0644 - val_loss: 0.0677 - 591ms/epoch - 3ms/step\n",
            "Epoch 43/100\n",
            "202/202 - 1s - loss: 0.0639 - val_loss: 0.0660 - 568ms/epoch - 3ms/step\n",
            "Epoch 44/100\n",
            "202/202 - 1s - loss: 0.0639 - val_loss: 0.0665 - 572ms/epoch - 3ms/step\n",
            "Epoch 45/100\n",
            "202/202 - 1s - loss: 0.0623 - val_loss: 0.0688 - 623ms/epoch - 3ms/step\n",
            "Epoch 46/100\n",
            "202/202 - 1s - loss: 0.0638 - val_loss: 0.0678 - 608ms/epoch - 3ms/step\n",
            "Epoch 47/100\n",
            "202/202 - 1s - loss: 0.0626 - val_loss: 0.0684 - 633ms/epoch - 3ms/step\n",
            "Epoch 48/100\n",
            "202/202 - 1s - loss: 0.0633 - val_loss: 0.0665 - 594ms/epoch - 3ms/step\n",
            "Epoch 49/100\n",
            "202/202 - 1s - loss: 0.0625 - val_loss: 0.0675 - 632ms/epoch - 3ms/step\n",
            "Epoch 50/100\n",
            "202/202 - 1s - loss: 0.0612 - val_loss: 0.0670 - 596ms/epoch - 3ms/step\n",
            "Epoch 51/100\n",
            "202/202 - 1s - loss: 0.0616 - val_loss: 0.0666 - 585ms/epoch - 3ms/step\n",
            "Epoch 52/100\n",
            "202/202 - 1s - loss: 0.0614 - val_loss: 0.0704 - 609ms/epoch - 3ms/step\n",
            "Epoch 53/100\n",
            "202/202 - 1s - loss: 0.0621 - val_loss: 0.0708 - 556ms/epoch - 3ms/step\n",
            "Epoch 54/100\n",
            "202/202 - 1s - loss: 0.0607 - val_loss: 0.0724 - 577ms/epoch - 3ms/step\n",
            "Epoch 55/100\n",
            "202/202 - 1s - loss: 0.0611 - val_loss: 0.0699 - 606ms/epoch - 3ms/step\n",
            "Epoch 56/100\n",
            "202/202 - 1s - loss: 0.0601 - val_loss: 0.0690 - 629ms/epoch - 3ms/step\n",
            "Epoch 57/100\n",
            "202/202 - 1s - loss: 0.0601 - val_loss: 0.0675 - 600ms/epoch - 3ms/step\n",
            "Epoch 58/100\n",
            "202/202 - 1s - loss: 0.0598 - val_loss: 0.0685 - 664ms/epoch - 3ms/step\n",
            "Epoch 59/100\n",
            "202/202 - 1s - loss: 0.0601 - val_loss: 0.0652 - 656ms/epoch - 3ms/step\n",
            "Epoch 60/100\n",
            "202/202 - 1s - loss: 0.0583 - val_loss: 0.0690 - 617ms/epoch - 3ms/step\n",
            "Epoch 61/100\n",
            "202/202 - 1s - loss: 0.0603 - val_loss: 0.0726 - 614ms/epoch - 3ms/step\n",
            "Epoch 62/100\n",
            "202/202 - 1s - loss: 0.0610 - val_loss: 0.0700 - 614ms/epoch - 3ms/step\n",
            "Epoch 63/100\n",
            "202/202 - 1s - loss: 0.0584 - val_loss: 0.0775 - 565ms/epoch - 3ms/step\n",
            "Epoch 64/100\n",
            "202/202 - 1s - loss: 0.0587 - val_loss: 0.0711 - 618ms/epoch - 3ms/step\n",
            "Epoch 65/100\n",
            "202/202 - 1s - loss: 0.0576 - val_loss: 0.0719 - 641ms/epoch - 3ms/step\n",
            "Epoch 66/100\n",
            "202/202 - 1s - loss: 0.0568 - val_loss: 0.0681 - 609ms/epoch - 3ms/step\n",
            "Epoch 67/100\n",
            "202/202 - 1s - loss: 0.0575 - val_loss: 0.0683 - 636ms/epoch - 3ms/step\n",
            "Epoch 68/100\n",
            "202/202 - 1s - loss: 0.0590 - val_loss: 0.0714 - 578ms/epoch - 3ms/step\n",
            "Epoch 69/100\n",
            "202/202 - 1s - loss: 0.0585 - val_loss: 0.0749 - 613ms/epoch - 3ms/step\n",
            "Epoch 70/100\n",
            "202/202 - 1s - loss: 0.0578 - val_loss: 0.0757 - 584ms/epoch - 3ms/step\n",
            "Epoch 71/100\n",
            "202/202 - 1s - loss: 0.0569 - val_loss: 0.0785 - 612ms/epoch - 3ms/step\n",
            "Epoch 72/100\n",
            "202/202 - 1s - loss: 0.0579 - val_loss: 0.0761 - 572ms/epoch - 3ms/step\n",
            "Epoch 73/100\n",
            "202/202 - 1s - loss: 0.0570 - val_loss: 0.0757 - 600ms/epoch - 3ms/step\n",
            "Epoch 74/100\n",
            "202/202 - 1s - loss: 0.0584 - val_loss: 0.0770 - 602ms/epoch - 3ms/step\n",
            "Epoch 75/100\n",
            "202/202 - 1s - loss: 0.0564 - val_loss: 0.0713 - 615ms/epoch - 3ms/step\n",
            "Epoch 76/100\n",
            "202/202 - 1s - loss: 0.0563 - val_loss: 0.0774 - 649ms/epoch - 3ms/step\n",
            "Epoch 77/100\n",
            "202/202 - 1s - loss: 0.0552 - val_loss: 0.0693 - 580ms/epoch - 3ms/step\n",
            "Epoch 78/100\n",
            "202/202 - 1s - loss: 0.0559 - val_loss: 0.0698 - 570ms/epoch - 3ms/step\n",
            "Epoch 79/100\n",
            "202/202 - 1s - loss: 0.0563 - val_loss: 0.0735 - 564ms/epoch - 3ms/step\n",
            "Epoch 80/100\n",
            "202/202 - 1s - loss: 0.0540 - val_loss: 0.0669 - 560ms/epoch - 3ms/step\n",
            "Epoch 81/100\n",
            "202/202 - 1s - loss: 0.0544 - val_loss: 0.0713 - 609ms/epoch - 3ms/step\n",
            "Epoch 82/100\n",
            "202/202 - 1s - loss: 0.0544 - val_loss: 0.0685 - 652ms/epoch - 3ms/step\n",
            "Epoch 83/100\n",
            "202/202 - 1s - loss: 0.0549 - val_loss: 0.0682 - 623ms/epoch - 3ms/step\n",
            "Epoch 84/100\n",
            "202/202 - 1s - loss: 0.0553 - val_loss: 0.0715 - 597ms/epoch - 3ms/step\n",
            "Epoch 85/100\n",
            "202/202 - 1s - loss: 0.0534 - val_loss: 0.0678 - 549ms/epoch - 3ms/step\n",
            "Epoch 86/100\n",
            "202/202 - 1s - loss: 0.0522 - val_loss: 0.0659 - 580ms/epoch - 3ms/step\n",
            "Epoch 87/100\n",
            "202/202 - 1s - loss: 0.0529 - val_loss: 0.0658 - 597ms/epoch - 3ms/step\n",
            "Epoch 88/100\n",
            "202/202 - 1s - loss: 0.0533 - val_loss: 0.0696 - 568ms/epoch - 3ms/step\n",
            "Epoch 89/100\n",
            "202/202 - 1s - loss: 0.0548 - val_loss: 0.0687 - 586ms/epoch - 3ms/step\n",
            "Epoch 90/100\n",
            "202/202 - 1s - loss: 0.0529 - val_loss: 0.0711 - 598ms/epoch - 3ms/step\n",
            "Epoch 91/100\n",
            "202/202 - 1s - loss: 0.0525 - val_loss: 0.0767 - 643ms/epoch - 3ms/step\n",
            "Epoch 92/100\n",
            "202/202 - 1s - loss: 0.0538 - val_loss: 0.0682 - 625ms/epoch - 3ms/step\n",
            "Epoch 93/100\n",
            "202/202 - 1s - loss: 0.0542 - val_loss: 0.0652 - 593ms/epoch - 3ms/step\n",
            "Epoch 94/100\n",
            "202/202 - 1s - loss: 0.0524 - val_loss: 0.0746 - 608ms/epoch - 3ms/step\n",
            "Epoch 95/100\n",
            "202/202 - 1s - loss: 0.0532 - val_loss: 0.0670 - 574ms/epoch - 3ms/step\n",
            "Epoch 96/100\n",
            "202/202 - 1s - loss: 0.0529 - val_loss: 0.0659 - 600ms/epoch - 3ms/step\n",
            "Epoch 97/100\n",
            "202/202 - 1s - loss: 0.0516 - val_loss: 0.0670 - 567ms/epoch - 3ms/step\n",
            "Epoch 98/100\n",
            "202/202 - 1s - loss: 0.0514 - val_loss: 0.0717 - 587ms/epoch - 3ms/step\n",
            "Epoch 99/100\n",
            "202/202 - 1s - loss: 0.0511 - val_loss: 0.0669 - 558ms/epoch - 3ms/step\n",
            "Epoch 100/100\n",
            "202/202 - 1s - loss: 0.0504 - val_loss: 0.0691 - 635ms/epoch - 3ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QiuCc03ceanC"
      },
      "source": [
        "# ดูค่า Loss function เปรียบเทียบ Train,Test"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "zO7hajiz8DZR",
        "outputId": "19c1e9e5-99f8-4751-c082-de3bfaf55e7c"
      },
      "source": [
        "# plot history\n",
        "pyplot.plot(history.history['loss'], label='train')\n",
        "pyplot.plot(history.history['val_loss'], label='test')\n",
        "pyplot.legend()\n",
        "pyplot.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "image/png": {
              "width": 378,
              "height": 248
            },
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X5ui64IdegbJ"
      },
      "source": [
        "# เริ่ม Forecast PM2.5 จาก Test Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bDKMkuvtPVJa"
      },
      "source": [
        "# make a prediction\n",
        "yhat = model.predict(test_X)\n",
        "test_X = test_X.reshape((test_X.shape[0], test_X.shape[2]))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XIfxISM8eosA"
      },
      "source": [
        "# เปลี่ยนค่า Forcast กลับเป็นหน่วยเดิม เนื่องจากค่า Forcast เป็นค่าที่ทำ Scalling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fIy4B9DLPZMK"
      },
      "source": [
        "inv_yhat = yhat*(max_dict['PM2.5']-min_dict['PM2.5'])+min_dict['PM2.5']\n",
        "inv_y = test_y*(max_dict['PM2.5']-min_dict['PM2.5'])+min_dict['PM2.5']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RMZCtWYXPg3o",
        "outputId": "3ddf3c7e-cf6c-46f3-9a11-0490858a5739"
      },
      "source": [
        "inv_yhat.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(113, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DZ0LwJpde595"
      },
      "source": [
        "# ประเมินประสิทธิภาพโมเดลด้วย RMSE,MAE,MAEP"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F0dGuVfXPZay",
        "outputId": "e29872aa-a868-40ab-afc7-f20685d1af8f"
      },
      "source": [
        "rmse = np.sqrt(mean_squared_error(inv_y, inv_yhat))\n",
        "print('Test RMSE: %.2f' % rmse)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test RMSE: 8.08\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w2ZQyo72Pc0s",
        "outputId": "9b631c68-fb04-49c8-de2c-446ab918d8ed"
      },
      "source": [
        "mae = mean_absolute_error(inv_y, inv_yhat)\n",
        "print('Test MAE: %.2f' %mae )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test MAE: 5.80\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x7Y390ZnPc3u",
        "outputId": "d33165d4-0a5c-4aae-dff3-15f61ee5909c"
      },
      "source": [
        "mape = np.mean(np.abs((inv_y - inv_yhat)/inv_y))*100\n",
        "print('Test MAPE: %.2f' %mape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test MAPE: 22.05\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "odPE5EJShehE",
        "outputId": "b6bd8202-f99c-4d68-f895-58e09deb7a9a"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm_1 (LSTM)               (None, 50)                46200     \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 7)                 357       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 46,557\n",
            "Trainable params: 46,557\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zFbRO1d5e-Qh"
      },
      "source": [
        "# เปรียบเทียบค่า Forcast ,Actual"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 318
        },
        "id": "UODrV8XsPc6d",
        "outputId": "f75d58d9-9ebf-4e03-dc11-1d0dfc0d66dd"
      },
      "source": [
        "aa=[x for x in range(44)]\n",
        "plt.plot(aa, inv_y[:44], marker='.', label=\"actual\")\n",
        "plt.plot(aa, inv_yhat[:44], 'r', label=\"prediction\")\n",
        "plt.ylabel('PM2.5', size=15)\n",
        "plt.xlabel('Date', size=15)\n",
        "plt.legend(fontsize=13)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "image/png": {
              "width": 387,
              "height": 301
            },
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-t4QtsRufg4p"
      },
      "source": [
        "# Output ที่ได้ (inv_yhat) และ ค่าที่เก็บข้อมูลจริงๆจากสถานี (inv_y)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "noL4In0IPuGD",
        "outputId": "bd4fc527-48ba-4e7c-a2c6-7ce292944bb2"
      },
      "source": [
        "inv_yhat"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[18.353636 , 17.840702 , 16.823235 , 16.12713  , 16.46102  ,\n",
              "        17.055393 , 17.088629 ],\n",
              "       [16.287136 , 16.310884 , 15.847023 , 15.575824 , 15.623726 ,\n",
              "        16.821493 , 16.27605  ],\n",
              "       [14.722134 , 14.911751 , 14.793527 , 15.166611 , 15.917477 ,\n",
              "        17.410107 , 16.800983 ],\n",
              "       [14.108807 , 14.780669 , 14.89249  , 15.831952 , 16.8434   ,\n",
              "        17.510136 , 16.564068 ],\n",
              "       [14.264053 , 14.551593 , 15.30677  , 15.553448 , 16.353943 ,\n",
              "        17.247046 , 16.365017 ],\n",
              "       [14.571079 , 14.714445 , 14.934175 , 14.609609 , 15.781853 ,\n",
              "        16.461807 , 15.411133 ],\n",
              "       [14.81271  , 14.582339 , 13.639133 , 14.187184 , 14.796118 ,\n",
              "        14.796175 , 14.005785 ],\n",
              "       [14.4500675, 14.151091 , 13.657885 , 13.940263 , 13.9257145,\n",
              "        14.691745 , 14.504832 ],\n",
              "       [14.300048 , 13.954341 , 12.882599 , 12.898788 , 13.587795 ,\n",
              "        14.015732 , 13.379854 ],\n",
              "       [13.097077 , 12.582191 , 10.969368 , 11.977612 , 12.537708 ,\n",
              "        12.274292 , 11.105386 ],\n",
              "       [12.583477 , 11.6051855, 10.101691 , 10.929779 , 11.29068  ,\n",
              "        11.132013 ,  9.923225 ],\n",
              "       [12.43952  , 11.662268 ,  9.518918 ,  9.456846 , 10.008755 ,\n",
              "         9.878876 ,  8.9625025],\n",
              "       [13.830154 , 13.225982 , 11.306975 , 11.094663 , 11.172221 ,\n",
              "        11.878013 , 11.944576 ],\n",
              "       [14.983032 , 13.025072 , 10.096918 ,  9.631727 , 10.694465 ,\n",
              "        12.056023 , 11.342738 ],\n",
              "       [13.1611805, 12.395509 , 11.071231 , 11.297633 , 12.130127 ,\n",
              "        12.613199 , 12.153647 ],\n",
              "       [12.688848 , 12.407149 , 11.615801 , 12.786802 , 12.810486 ,\n",
              "        12.33724  , 11.65981  ],\n",
              "       [12.702973 , 13.163126 , 13.001055 , 13.508458 , 13.1263485,\n",
              "        13.17692  , 12.92797  ],\n",
              "       [15.063465 , 13.933786 , 12.388411 , 12.1920185, 12.859158 ,\n",
              "        13.546778 , 13.747066 ],\n",
              "       [16.938099 , 14.695879 , 12.40806  , 12.5773   , 14.016032 ,\n",
              "        15.162326 , 15.697613 ],\n",
              "       [17.5346   , 15.146503 , 13.433742 , 12.903435 , 14.176037 ,\n",
              "        15.221661 , 15.610344 ],\n",
              "       [14.815695 , 16.056622 , 16.156874 , 16.812508 , 16.896229 ,\n",
              "        17.228807 , 17.45021  ],\n",
              "       [15.845227 , 18.941727 , 20.019192 , 20.744349 , 19.578606 ,\n",
              "        19.18506  , 19.100163 ],\n",
              "       [16.977674 , 17.483727 , 17.567545 , 17.7445   , 17.58559  ,\n",
              "        17.886585 , 18.06689  ],\n",
              "       [15.323363 , 15.817169 , 16.167564 , 17.150043 , 17.775948 ,\n",
              "        18.381134 , 18.321869 ],\n",
              "       [14.9786825, 16.321388 , 17.931114 , 18.784315 , 18.208782 ,\n",
              "        17.236362 , 16.63382  ],\n",
              "       [14.655685 , 16.046124 , 17.607342 , 18.61061  , 17.885939 ,\n",
              "        17.065413 , 16.760326 ],\n",
              "       [15.830738 , 15.934816 , 15.869162 , 16.371183 , 16.6848   ,\n",
              "        17.193436 , 17.854698 ],\n",
              "       [15.594919 , 16.099302 , 16.3101   , 15.940453 , 16.853245 ,\n",
              "        18.546024 , 19.814823 ],\n",
              "       [15.899639 , 15.796837 , 15.601028 , 15.770025 , 17.620243 ,\n",
              "        19.25874  , 19.741028 ],\n",
              "       [15.015448 , 15.757795 , 16.260954 , 17.87571  , 18.927517 ,\n",
              "        18.597641 , 18.221762 ],\n",
              "       [13.982147 , 15.243216 , 16.71024  , 18.450844 , 18.174393 ,\n",
              "        17.196602 , 16.78076  ],\n",
              "       [14.74025  , 16.205967 , 17.265648 , 18.12543  , 17.726257 ,\n",
              "        17.852001 , 17.91021  ],\n",
              "       [17.103107 , 17.156937 , 16.970482 , 16.277897 , 17.199198 ,\n",
              "        18.720783 , 19.000023 ],\n",
              "       [17.25439  , 17.040936 , 16.60866  , 16.445145 , 17.977745 ,\n",
              "        19.126076 , 19.215233 ],\n",
              "       [14.776575 , 15.087009 , 15.827593 , 17.218493 , 18.341427 ,\n",
              "        18.414917 , 18.716953 ],\n",
              "       [13.156639 , 14.769596 , 16.282799 , 17.162006 , 17.447308 ,\n",
              "        18.411636 , 18.97983  ],\n",
              "       [15.139258 , 15.965534 , 16.046555 , 16.476091 , 17.601452 ,\n",
              "        18.428593 , 18.376488 ],\n",
              "       [16.27948  , 16.401016 , 16.233591 , 16.856697 , 17.789362 ,\n",
              "        18.166174 , 17.455006 ],\n",
              "       [18.371046 , 17.378426 , 16.728664 , 16.9127   , 17.442862 ,\n",
              "        17.95578  , 17.549854 ],\n",
              "       [16.414745 , 16.479336 , 16.212187 , 16.673136 , 17.078175 ,\n",
              "        17.605206 , 17.730772 ],\n",
              "       [16.555565 , 17.381897 , 16.613308 , 16.087423 , 16.764519 ,\n",
              "        19.186527 , 19.935135 ],\n",
              "       [23.096672 , 20.323414 , 15.912564 , 13.116045 , 16.961658 ,\n",
              "        21.639774 , 22.434513 ],\n",
              "       [16.077747 , 16.605247 , 17.073917 , 18.673985 , 19.647276 ,\n",
              "        19.166557 , 19.08442  ],\n",
              "       [13.422913 , 15.6966715, 17.47227  , 19.067886 , 18.523104 ,\n",
              "        19.197718 , 19.251331 ],\n",
              "       [11.857255 , 16.419174 , 19.267561 , 19.093899 , 18.052643 ,\n",
              "        20.340668 , 20.851091 ],\n",
              "       [16.272196 , 17.889233 , 17.658358 , 17.88191  , 18.78579  ,\n",
              "        20.603043 , 20.67276  ],\n",
              "       [18.749855 , 17.525078 , 17.06138  , 18.081112 , 18.631927 ,\n",
              "        18.96854  , 19.009365 ],\n",
              "       [14.224342 , 17.49685  , 19.397003 , 18.252655 , 17.471043 ,\n",
              "        19.29607  , 19.861828 ],\n",
              "       [12.837231 , 18.39275  , 21.438314 , 18.83049  , 16.729774 ,\n",
              "        20.006336 , 21.30147  ],\n",
              "       [17.241756 , 19.877617 , 21.27657  , 19.88703  , 19.426888 ,\n",
              "        21.751032 , 22.387108 ],\n",
              "       [25.207262 , 24.71185  , 24.759115 , 23.469517 , 21.838413 ,\n",
              "        21.483593 , 21.294754 ],\n",
              "       [26.484863 , 27.164572 , 29.580137 , 28.627047 , 24.487913 ,\n",
              "        20.026215 , 20.25496  ],\n",
              "       [26.464415 , 29.668356 , 31.3307   , 28.20308  , 22.024872 ,\n",
              "        21.551088 , 22.315512 ],\n",
              "       [24.138449 , 25.708628 , 25.361422 , 21.070517 , 19.629066 ,\n",
              "        23.741848 , 27.283445 ],\n",
              "       [25.686373 , 25.216232 , 23.333897 , 18.66224  , 18.826878 ,\n",
              "        26.915016 , 30.864977 ],\n",
              "       [19.981186 , 21.591484 , 23.171816 , 19.134962 , 19.061468 ,\n",
              "        25.989628 , 30.185843 ],\n",
              "       [15.366962 , 20.919992 , 24.370886 , 21.481167 , 19.965126 ,\n",
              "        26.802958 , 30.18645  ],\n",
              "       [17.268372 , 23.246399 , 24.32437  , 22.18527  , 23.392506 ,\n",
              "        33.733685 , 37.70462  ],\n",
              "       [22.82586  , 27.919067 , 26.941593 , 24.496155 , 26.603952 ,\n",
              "        35.32993  , 37.732796 ],\n",
              "       [25.446571 , 28.561747 , 26.329082 , 26.244858 , 28.792152 ,\n",
              "        34.981956 , 36.783375 ],\n",
              "       [21.874273 , 25.880465 , 27.12547  , 27.675343 , 27.639574 ,\n",
              "        32.16082  , 34.352486 ],\n",
              "       [21.81064  , 31.367323 , 34.60724  , 30.693237 , 31.209644 ,\n",
              "        35.65863  , 38.96465  ],\n",
              "       [28.443323 , 32.38225  , 30.433575 , 28.675594 , 30.92363  ,\n",
              "        36.355606 , 38.92784  ],\n",
              "       [27.72935  , 29.496288 , 31.645594 , 31.104553 , 32.84895  ,\n",
              "        31.071732 , 33.229958 ],\n",
              "       [17.98239  , 25.144604 , 35.016205 , 35.69941  , 31.545763 ,\n",
              "        25.000805 , 25.107729 ],\n",
              "       [26.117952 , 32.12526  , 39.797302 , 36.214417 , 30.69135  ,\n",
              "        24.054062 , 23.61757  ],\n",
              "       [32.11491  , 35.51166  , 38.36031  , 33.341457 , 29.459658 ,\n",
              "        26.19841  , 26.287163 ],\n",
              "       [35.782993 , 33.288773 , 32.248547 , 25.18695  , 25.026361 ,\n",
              "        28.905401 , 31.005144 ],\n",
              "       [33.591652 , 29.987982 , 27.89005  , 20.843296 , 23.533113 ,\n",
              "        29.190332 , 31.736076 ],\n",
              "       [27.450397 , 25.194635 , 24.409418 , 20.893837 , 25.313894 ,\n",
              "        29.469612 , 32.38872  ],\n",
              "       [29.21775  , 26.199543 , 23.340118 , 23.641083 , 27.524384 ,\n",
              "        31.033413 , 33.733612 ],\n",
              "       [34.417397 , 29.239565 , 25.015429 , 24.402023 , 30.312853 ,\n",
              "        36.69364  , 41.1341   ],\n",
              "       [37.117702 , 34.482494 , 29.50148  , 28.192259 , 33.025593 ,\n",
              "        40.828953 , 43.89169  ],\n",
              "       [25.67744  , 25.736784 , 25.779892 , 28.671476 , 34.091087 ,\n",
              "        37.367737 , 38.68712  ],\n",
              "       [25.180258 , 26.94318  , 28.828876 , 31.99368  , 33.59008  ,\n",
              "        33.0412   , 31.195908 ],\n",
              "       [31.095848 , 32.327377 , 31.94251  , 30.731674 , 30.079102 ,\n",
              "        27.84962  , 28.527966 ],\n",
              "       [36.825752 , 35.540123 , 30.038202 , 26.452646 , 24.585629 ,\n",
              "        28.197025 , 31.146376 ],\n",
              "       [36.030254 , 31.99381  , 25.099659 , 21.327904 , 25.978888 ,\n",
              "        32.943855 , 37.705822 ],\n",
              "       [30.93156  , 26.38401  , 20.104063 , 19.780626 , 27.09134  ,\n",
              "        33.963726 , 38.85933  ],\n",
              "       [23.115437 , 21.304707 , 22.666939 , 25.493345 , 29.421139 ,\n",
              "        29.264278 , 32.854588 ],\n",
              "       [26.516762 , 24.850712 , 24.440432 , 26.29316  , 27.802902 ,\n",
              "        30.378443 , 32.898857 ],\n",
              "       [26.752283 , 25.911629 , 26.187216 , 23.997974 , 29.262878 ,\n",
              "        33.350487 , 36.79344  ],\n",
              "       [29.71035  , 27.618612 , 24.161318 , 23.885424 , 30.592093 ,\n",
              "        36.01187  , 36.719124 ],\n",
              "       [24.498613 , 24.170216 , 26.082851 , 28.932926 , 30.790293 ,\n",
              "        29.5791   , 28.626263 ],\n",
              "       [18.475672 , 22.620953 , 29.031668 , 31.93934  , 27.986673 ,\n",
              "        22.961235 , 20.921398 ],\n",
              "       [21.35339  , 24.995815 , 29.337788 , 28.999422 , 26.119442 ,\n",
              "        21.477806 , 21.346893 ],\n",
              "       [22.840683 , 24.077291 , 25.040556 , 23.845974 , 23.694872 ,\n",
              "        24.220922 , 24.506397 ],\n",
              "       [21.305115 , 21.528866 , 21.824047 , 21.50259  , 22.45978  ,\n",
              "        23.447695 , 24.241535 ],\n",
              "       [23.55722  , 23.103344 , 22.116985 , 21.335142 , 22.90753  ,\n",
              "        23.82843  , 24.68038  ],\n",
              "       [22.577694 , 21.257967 , 19.909355 , 19.87697  , 22.25426  ,\n",
              "        22.806528 , 23.991081 ],\n",
              "       [21.701168 , 19.107965 , 18.71088  , 18.879114 , 22.325773 ,\n",
              "        23.899372 , 25.174183 ],\n",
              "       [23.30283  , 22.526016 , 23.036587 , 22.79655  , 25.027924 ,\n",
              "        26.978025 , 27.529741 ],\n",
              "       [25.250889 , 25.107704 , 24.854576 , 23.127085 , 25.571074 ,\n",
              "        27.572063 , 28.157238 ],\n",
              "       [27.841728 , 28.887537 , 27.386206 , 26.15959  , 29.281029 ,\n",
              "        36.067757 , 36.034393 ],\n",
              "       [31.470436 , 32.03701  , 30.974388 , 30.428762 , 35.714993 ,\n",
              "        44.032707 , 43.51223  ],\n",
              "       [32.570072 , 33.960014 , 33.801247 , 35.428246 , 41.467896 ,\n",
              "        46.12848  , 45.249176 ],\n",
              "       [30.283789 , 32.92581  , 34.4953   , 37.246746 , 39.894897 ,\n",
              "        41.04168  , 39.09846  ],\n",
              "       [38.215652 , 42.97089  , 44.426926 , 41.565086 , 41.227528 ,\n",
              "        41.07372  , 41.329548 ],\n",
              "       [52.420914 , 54.51745  , 50.808605 , 43.441795 , 40.823902 ,\n",
              "        42.99429  , 43.09531  ],\n",
              "       [50.80711  , 50.14785  , 44.573933 , 40.239754 , 40.4658   ,\n",
              "        41.918865 , 39.9762   ],\n",
              "       [49.481472 , 45.605927 , 38.940834 , 36.207123 , 35.93319  ,\n",
              "        36.177433 , 34.231476 ],\n",
              "       [49.025043 , 43.46257  , 35.054516 , 30.438198 , 31.187616 ,\n",
              "        33.23806  , 35.129005 ],\n",
              "       [53.60402  , 44.706512 , 31.589392 , 23.87091  , 27.781015 ,\n",
              "        32.77526  , 38.35036  ],\n",
              "       [39.551926 , 32.671013 , 22.880348 , 20.655754 , 28.425203 ,\n",
              "        35.893585 , 42.920113 ],\n",
              "       [30.671001 , 24.952475 , 17.84891  , 19.57771  , 29.819517 ,\n",
              "        41.664074 , 47.687214 ],\n",
              "       [32.520447 , 27.118181 , 19.416935 , 20.254343 , 32.195976 ,\n",
              "        44.71844  , 50.344288 ],\n",
              "       [29.12211  , 25.943756 , 20.304329 , 21.982458 , 32.049774 ,\n",
              "        44.849716 , 50.518223 ],\n",
              "       [25.314054 , 24.340805 , 23.242167 , 26.345901 , 33.28189  ,\n",
              "        43.788773 , 47.675232 ],\n",
              "       [26.208733 , 30.41883  , 32.374947 , 33.217484 , 36.80561  ,\n",
              "        44.123314 , 46.222546 ],\n",
              "       [39.56865  , 40.825523 , 38.084633 , 37.429226 , 39.24662  ,\n",
              "        44.973797 , 46.11046  ],\n",
              "       [48.222122 , 42.434624 , 35.132923 , 32.71592  , 33.299683 ,\n",
              "        39.796383 , 41.281425 ],\n",
              "       [50.651527 , 41.004543 , 30.76584  , 24.796942 , 29.197102 ,\n",
              "        36.33162  , 39.488068 ],\n",
              "       [43.15999  , 33.335194 , 24.90309  , 21.515017 , 26.4092   ,\n",
              "        32.35218  , 34.793705 ]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3dHPhgGPuOP",
        "outputId": "0648d956-a276-498f-9786-06642af18955"
      },
      "source": [
        "inv_y"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[19., 17., 15., 15., 18., 23., 19.],\n",
              "       [17., 15., 15., 18., 23., 19., 16.],\n",
              "       [15., 15., 18., 23., 19., 16., 15.],\n",
              "       [15., 18., 23., 19., 16., 15., 13.],\n",
              "       [18., 23., 19., 16., 15., 13., 17.],\n",
              "       [23., 19., 16., 15., 13., 17., 17.],\n",
              "       [19., 16., 15., 13., 17., 17., 14.],\n",
              "       [16., 15., 13., 17., 17., 14., 12.],\n",
              "       [15., 13., 17., 17., 14., 12., 14.],\n",
              "       [13., 17., 17., 14., 12., 14., 10.],\n",
              "       [17., 17., 14., 12., 14., 10.,  8.],\n",
              "       [17., 14., 12., 14., 10.,  8., 17.],\n",
              "       [14., 12., 14., 10.,  8., 17., 24.],\n",
              "       [12., 14., 10.,  8., 17., 24., 29.],\n",
              "       [14., 10.,  8., 17., 24., 29., 14.],\n",
              "       [10.,  8., 17., 24., 29., 14., 15.],\n",
              "       [ 8., 17., 24., 29., 14., 15., 13.],\n",
              "       [17., 24., 29., 14., 15., 13., 10.],\n",
              "       [24., 29., 14., 15., 13., 10., 16.],\n",
              "       [29., 14., 15., 13., 10., 16., 12.],\n",
              "       [14., 15., 13., 10., 16., 12., 18.],\n",
              "       [15., 13., 10., 16., 12., 18., 15.],\n",
              "       [13., 10., 16., 12., 18., 15., 15.],\n",
              "       [10., 16., 12., 18., 15., 15., 18.],\n",
              "       [16., 12., 18., 15., 15., 18., 14.],\n",
              "       [12., 18., 15., 15., 18., 14., 18.],\n",
              "       [18., 15., 15., 18., 14., 18., 23.],\n",
              "       [15., 15., 18., 14., 18., 23., 19.],\n",
              "       [15., 18., 14., 18., 23., 19., 17.],\n",
              "       [18., 14., 18., 23., 19., 17., 15.],\n",
              "       [14., 18., 23., 19., 17., 15., 18.],\n",
              "       [18., 23., 19., 17., 15., 18., 20.],\n",
              "       [23., 19., 17., 15., 18., 20., 29.],\n",
              "       [19., 17., 15., 18., 20., 29., 21.],\n",
              "       [17., 15., 18., 20., 29., 21., 23.],\n",
              "       [15., 18., 20., 29., 21., 23., 18.],\n",
              "       [18., 20., 29., 21., 23., 18., 17.],\n",
              "       [20., 29., 21., 23., 18., 17., 12.],\n",
              "       [29., 21., 23., 18., 17., 12., 12.],\n",
              "       [21., 23., 18., 17., 12., 12., 21.],\n",
              "       [23., 18., 17., 12., 12., 21., 19.],\n",
              "       [18., 17., 12., 12., 21., 19., 18.],\n",
              "       [17., 12., 12., 21., 19., 18., 22.],\n",
              "       [12., 12., 21., 19., 18., 22., 27.],\n",
              "       [12., 21., 19., 18., 22., 27., 31.],\n",
              "       [21., 19., 18., 22., 27., 31., 42.],\n",
              "       [19., 18., 22., 27., 31., 42., 47.],\n",
              "       [18., 22., 27., 31., 42., 47., 32.],\n",
              "       [22., 27., 31., 42., 47., 32., 29.],\n",
              "       [27., 31., 42., 47., 32., 29., 21.],\n",
              "       [31., 42., 47., 32., 29., 21., 19.],\n",
              "       [42., 47., 32., 29., 21., 19., 21.],\n",
              "       [47., 32., 29., 21., 19., 21., 18.],\n",
              "       [32., 29., 21., 19., 21., 18., 23.],\n",
              "       [29., 21., 19., 21., 18., 23., 22.],\n",
              "       [21., 19., 21., 18., 23., 22., 30.],\n",
              "       [19., 21., 18., 23., 22., 30., 27.],\n",
              "       [21., 18., 23., 22., 30., 27., 27.],\n",
              "       [18., 23., 22., 30., 27., 27., 20.],\n",
              "       [23., 22., 30., 27., 27., 20., 38.],\n",
              "       [22., 30., 27., 27., 20., 38., 32.],\n",
              "       [30., 27., 27., 20., 38., 32., 34.],\n",
              "       [27., 27., 20., 38., 32., 34., 32.],\n",
              "       [27., 20., 38., 32., 34., 32., 28.],\n",
              "       [20., 38., 32., 34., 32., 28., 35.],\n",
              "       [38., 32., 34., 32., 28., 35., 40.],\n",
              "       [32., 34., 32., 28., 35., 40., 48.],\n",
              "       [34., 32., 28., 35., 40., 48., 25.],\n",
              "       [32., 28., 35., 40., 48., 25., 31.],\n",
              "       [28., 35., 40., 48., 25., 31., 32.],\n",
              "       [35., 40., 48., 25., 31., 32., 42.],\n",
              "       [40., 48., 25., 31., 32., 42., 38.],\n",
              "       [48., 25., 31., 32., 42., 38., 29.],\n",
              "       [25., 31., 32., 42., 38., 29., 29.],\n",
              "       [31., 32., 42., 38., 29., 29., 36.],\n",
              "       [32., 42., 38., 29., 29., 36., 20.],\n",
              "       [42., 38., 29., 29., 36., 20., 20.],\n",
              "       [38., 29., 29., 36., 20., 20., 18.],\n",
              "       [29., 29., 36., 20., 20., 18., 16.],\n",
              "       [29., 36., 20., 20., 18., 16., 21.],\n",
              "       [36., 20., 20., 18., 16., 21., 21.],\n",
              "       [20., 20., 18., 16., 21., 21., 17.],\n",
              "       [20., 18., 16., 21., 21., 17., 20.],\n",
              "       [18., 16., 21., 21., 17., 20., 20.],\n",
              "       [16., 21., 21., 17., 20., 20., 20.],\n",
              "       [21., 21., 17., 20., 20., 20., 25.],\n",
              "       [21., 17., 20., 20., 20., 25., 26.],\n",
              "       [17., 20., 20., 20., 25., 26., 31.],\n",
              "       [20., 20., 20., 25., 26., 31., 35.],\n",
              "       [20., 20., 25., 26., 31., 35., 33.],\n",
              "       [20., 25., 26., 31., 35., 33., 36.],\n",
              "       [25., 26., 31., 35., 33., 36., 48.],\n",
              "       [26., 31., 35., 33., 36., 48., 52.],\n",
              "       [31., 35., 33., 36., 48., 52., 53.],\n",
              "       [35., 33., 36., 48., 52., 53., 50.],\n",
              "       [33., 36., 48., 52., 53., 50., 66.],\n",
              "       [36., 48., 52., 53., 50., 66., 58.],\n",
              "       [48., 52., 53., 50., 66., 58., 39.],\n",
              "       [52., 53., 50., 66., 58., 39., 25.],\n",
              "       [53., 50., 66., 58., 39., 25., 28.],\n",
              "       [50., 66., 58., 39., 25., 28., 23.],\n",
              "       [66., 58., 39., 25., 28., 23., 25.],\n",
              "       [58., 39., 25., 28., 23., 25., 28.],\n",
              "       [39., 25., 28., 23., 25., 28., 39.],\n",
              "       [25., 28., 23., 25., 28., 39., 48.],\n",
              "       [28., 23., 25., 28., 39., 48., 45.],\n",
              "       [23., 25., 28., 39., 48., 45., 37.],\n",
              "       [25., 28., 39., 48., 45., 37., 34.],\n",
              "       [28., 39., 48., 45., 37., 34., 35.],\n",
              "       [39., 48., 45., 37., 34., 35., 25.],\n",
              "       [48., 45., 37., 34., 35., 25., 31.],\n",
              "       [45., 37., 34., 35., 25., 31., 29.],\n",
              "       [37., 34., 35., 25., 31., 29., 21.]])"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qeCdOUBcFNOi"
      },
      "source": [
        "# นำโมเดลมาใช้งานกับข้อมูล Real-time"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-i9_7iJ9WLD-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "1a1c6100-eba8-4e63-a48c-dfe17392a755"
      },
      "source": [
        "from datetime import datetime\n",
        "str(datetime.now())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'2022-03-10 07:13:46.100701'"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dsMUpEqCFkAG"
      },
      "source": [
        "# เรียกดูข้อมูลจาก Google Sheet ที่เก็บข้อมูล Realtime"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "MKW1gYzLFd43",
        "outputId": "12a3af1a-a264-46a4-d78e-1b0ee031d32f"
      },
      "source": [
        "url='https://docs.google.com/spreadsheets/d/10QTAjAmJ57fD_3lJmL56enZcFyRdbBBgvDqSl3TNs68/export?gid=0&format=csv'\n",
        "df_r= pd.read_csv(url)\n",
        "df_r"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-94ce14d1-823e-432b-a4c1-3460fbf1bf90\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>PM10</th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>pressure</th>\n",
              "      <th>wind_speed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7/10/2021 17:05:39</td>\n",
              "      <td>14</td>\n",
              "      <td>30</td>\n",
              "      <td>29.210</td>\n",
              "      <td>74.30</td>\n",
              "      <td>100439.65</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7/10/2021 17:50:17</td>\n",
              "      <td>14</td>\n",
              "      <td>29</td>\n",
              "      <td>29.210</td>\n",
              "      <td>74.30</td>\n",
              "      <td>100439.65</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7/10/2021 18:50:12</td>\n",
              "      <td>14</td>\n",
              "      <td>28</td>\n",
              "      <td>29.210</td>\n",
              "      <td>74.30</td>\n",
              "      <td>100439.65</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7/10/2021 19:50:12</td>\n",
              "      <td>14</td>\n",
              "      <td>27</td>\n",
              "      <td>29.210</td>\n",
              "      <td>74.30</td>\n",
              "      <td>100439.65</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7/10/2021 20:50:12</td>\n",
              "      <td>13</td>\n",
              "      <td>27</td>\n",
              "      <td>29.210</td>\n",
              "      <td>74.30</td>\n",
              "      <td>100439.65</td>\n",
              "      <td>3.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5825</th>\n",
              "      <td>3/10/2022 4:50:20</td>\n",
              "      <td>54</td>\n",
              "      <td>90</td>\n",
              "      <td>31.030</td>\n",
              "      <td>69.97</td>\n",
              "      <td>100800.30</td>\n",
              "      <td>4.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5826</th>\n",
              "      <td>3/10/2022 5:50:18</td>\n",
              "      <td>52</td>\n",
              "      <td>88</td>\n",
              "      <td>30.885</td>\n",
              "      <td>69.14</td>\n",
              "      <td>100801.14</td>\n",
              "      <td>4.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5827</th>\n",
              "      <td>3/10/2022 6:50:19</td>\n",
              "      <td>50</td>\n",
              "      <td>86</td>\n",
              "      <td>30.885</td>\n",
              "      <td>69.14</td>\n",
              "      <td>100801.14</td>\n",
              "      <td>4.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5828</th>\n",
              "      <td>3/10/2022 7:50:13</td>\n",
              "      <td>49</td>\n",
              "      <td>84</td>\n",
              "      <td>30.885</td>\n",
              "      <td>69.14</td>\n",
              "      <td>100801.14</td>\n",
              "      <td>4.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5829</th>\n",
              "      <td>3/10/2022 8:50:18</td>\n",
              "      <td>47</td>\n",
              "      <td>82</td>\n",
              "      <td>30.885</td>\n",
              "      <td>69.14</td>\n",
              "      <td>100801.14</td>\n",
              "      <td>4.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5830 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94ce14d1-823e-432b-a4c1-3460fbf1bf90')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-94ce14d1-823e-432b-a4c1-3460fbf1bf90 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-94ce14d1-823e-432b-a4c1-3460fbf1bf90');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                    date  PM2.5  PM10  temperature  humidity   pressure  \\\n",
              "0     7/10/2021 17:05:39     14    30       29.210     74.30  100439.65   \n",
              "1     7/10/2021 17:50:17     14    29       29.210     74.30  100439.65   \n",
              "2     7/10/2021 18:50:12     14    28       29.210     74.30  100439.65   \n",
              "3     7/10/2021 19:50:12     14    27       29.210     74.30  100439.65   \n",
              "4     7/10/2021 20:50:12     13    27       29.210     74.30  100439.65   \n",
              "...                  ...    ...   ...          ...       ...        ...   \n",
              "5825   3/10/2022 4:50:20     54    90       31.030     69.97  100800.30   \n",
              "5826   3/10/2022 5:50:18     52    88       30.885     69.14  100801.14   \n",
              "5827   3/10/2022 6:50:19     50    86       30.885     69.14  100801.14   \n",
              "5828   3/10/2022 7:50:13     49    84       30.885     69.14  100801.14   \n",
              "5829   3/10/2022 8:50:18     47    82       30.885     69.14  100801.14   \n",
              "\n",
              "      wind_speed  \n",
              "0           3.77  \n",
              "1           3.77  \n",
              "2           3.77  \n",
              "3           3.77  \n",
              "4           3.77  \n",
              "...          ...  \n",
              "5825        4.35  \n",
              "5826        4.12  \n",
              "5827        4.12  \n",
              "5828        4.12  \n",
              "5829        4.12  \n",
              "\n",
              "[5830 rows x 7 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6Z6HPd6KF0Ux"
      },
      "source": [
        "# แปลง date จาก Object --> date + เซต Column date เป็น Index"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dNYwcIkHF3k7"
      },
      "source": [
        "df_r['date'] = pd.to_datetime(df_r['date'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fjc-ybM3F3n8",
        "outputId": "1ca87721-a613-4cf9-f861-16c659ebe3dd"
      },
      "source": [
        "df_r.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "date           datetime64[ns]\n",
              "PM2.5                   int64\n",
              "PM10                    int64\n",
              "temperature           float64\n",
              "humidity              float64\n",
              "pressure              float64\n",
              "wind_speed            float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#df_r['PM2.5'].astype(int)"
      ],
      "metadata": {
        "id": "8X21Dt7ws3Gv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#df_r['PM10'].astype(int)"
      ],
      "metadata": {
        "id": "rqcA_k62tcJd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0PSNvOncGhcC"
      },
      "source": [
        "df_r = df_r.groupby(df_r.date.dt.date).mean()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_r.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "WSNldtCrs0EP",
        "outputId": "e185f4f8-08e4-4bb2-a821-6764db954e5e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-cb93c68a-07aa-4614-b751-6a73a4659b23\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>PM10</th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>pressure</th>\n",
              "      <th>wind_speed</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-07-10</th>\n",
              "      <td>13.500000</td>\n",
              "      <td>27.500000</td>\n",
              "      <td>29.210000</td>\n",
              "      <td>74.300000</td>\n",
              "      <td>100439.650000</td>\n",
              "      <td>3.770000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-07-11</th>\n",
              "      <td>9.708333</td>\n",
              "      <td>20.375000</td>\n",
              "      <td>29.626667</td>\n",
              "      <td>71.326667</td>\n",
              "      <td>100651.886667</td>\n",
              "      <td>4.706667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-07-12</th>\n",
              "      <td>7.875000</td>\n",
              "      <td>21.208333</td>\n",
              "      <td>30.433333</td>\n",
              "      <td>65.181667</td>\n",
              "      <td>100743.938333</td>\n",
              "      <td>3.776667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-07-13</th>\n",
              "      <td>10.407407</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>30.880000</td>\n",
              "      <td>65.614444</td>\n",
              "      <td>100683.498889</td>\n",
              "      <td>3.835556</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-07-14</th>\n",
              "      <td>18.500000</td>\n",
              "      <td>39.416667</td>\n",
              "      <td>30.974167</td>\n",
              "      <td>67.656667</td>\n",
              "      <td>100605.755000</td>\n",
              "      <td>4.427500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb93c68a-07aa-4614-b751-6a73a4659b23')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cb93c68a-07aa-4614-b751-6a73a4659b23 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cb93c68a-07aa-4614-b751-6a73a4659b23');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                PM2.5       PM10  temperature   humidity       pressure  \\\n",
              "date                                                                      \n",
              "2021-07-10  13.500000  27.500000    29.210000  74.300000  100439.650000   \n",
              "2021-07-11   9.708333  20.375000    29.626667  71.326667  100651.886667   \n",
              "2021-07-12   7.875000  21.208333    30.433333  65.181667  100743.938333   \n",
              "2021-07-13  10.407407  26.000000    30.880000  65.614444  100683.498889   \n",
              "2021-07-14  18.500000  39.416667    30.974167  67.656667  100605.755000   \n",
              "\n",
              "            wind_speed  \n",
              "date                    \n",
              "2021-07-10    3.770000  \n",
              "2021-07-11    4.706667  \n",
              "2021-07-12    3.776667  \n",
              "2021-07-13    3.835556  \n",
              "2021-07-14    4.427500  "
            ]
          },
          "metadata": {},
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F1IUmsKKGtwm"
      },
      "source": [
        "# แสดงข้อมูล 30 วันล่าสุด"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "xjDc3zNaGlM6",
        "outputId": "8b2b9601-151a-41ad-963b-f8d30d69cf01"
      },
      "source": [
        "df_r = df_r.tail(30)\n",
        "df_r"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f0468e35-1d4b-4c9b-a883-3f99cfd6358c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>PM10</th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>pressure</th>\n",
              "      <th>wind_speed</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-02-09</th>\n",
              "      <td>39.958333</td>\n",
              "      <td>76.333333</td>\n",
              "      <td>30.171250</td>\n",
              "      <td>66.810000</td>\n",
              "      <td>101017.922500</td>\n",
              "      <td>4.692500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-10</th>\n",
              "      <td>25.458333</td>\n",
              "      <td>56.833333</td>\n",
              "      <td>29.790000</td>\n",
              "      <td>70.187500</td>\n",
              "      <td>100984.887500</td>\n",
              "      <td>4.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-11</th>\n",
              "      <td>21.083333</td>\n",
              "      <td>51.708333</td>\n",
              "      <td>30.286667</td>\n",
              "      <td>66.803750</td>\n",
              "      <td>100896.117500</td>\n",
              "      <td>4.810000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-12</th>\n",
              "      <td>24.458333</td>\n",
              "      <td>54.333333</td>\n",
              "      <td>29.600833</td>\n",
              "      <td>68.509167</td>\n",
              "      <td>100810.662500</td>\n",
              "      <td>5.150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-13</th>\n",
              "      <td>30.583333</td>\n",
              "      <td>59.833333</td>\n",
              "      <td>30.183750</td>\n",
              "      <td>66.647500</td>\n",
              "      <td>100687.890000</td>\n",
              "      <td>4.052500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-14</th>\n",
              "      <td>21.291667</td>\n",
              "      <td>46.041667</td>\n",
              "      <td>28.958333</td>\n",
              "      <td>72.225417</td>\n",
              "      <td>100815.136250</td>\n",
              "      <td>4.232500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-15</th>\n",
              "      <td>22.000000</td>\n",
              "      <td>50.166667</td>\n",
              "      <td>28.970208</td>\n",
              "      <td>65.687500</td>\n",
              "      <td>100881.781667</td>\n",
              "      <td>5.105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-16</th>\n",
              "      <td>33.625000</td>\n",
              "      <td>61.916667</td>\n",
              "      <td>28.447708</td>\n",
              "      <td>68.334167</td>\n",
              "      <td>100782.225000</td>\n",
              "      <td>5.913333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-17</th>\n",
              "      <td>50.739130</td>\n",
              "      <td>86.652174</td>\n",
              "      <td>29.034130</td>\n",
              "      <td>69.682609</td>\n",
              "      <td>100684.238261</td>\n",
              "      <td>5.259565</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-18</th>\n",
              "      <td>21.000000</td>\n",
              "      <td>54.875000</td>\n",
              "      <td>28.765208</td>\n",
              "      <td>72.440417</td>\n",
              "      <td>100823.160417</td>\n",
              "      <td>4.363333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-19</th>\n",
              "      <td>11.083333</td>\n",
              "      <td>36.958333</td>\n",
              "      <td>29.787292</td>\n",
              "      <td>68.488333</td>\n",
              "      <td>100900.116667</td>\n",
              "      <td>4.910000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-20</th>\n",
              "      <td>10.000000</td>\n",
              "      <td>30.833333</td>\n",
              "      <td>29.868750</td>\n",
              "      <td>66.522500</td>\n",
              "      <td>100808.524583</td>\n",
              "      <td>4.953333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-21</th>\n",
              "      <td>10.250000</td>\n",
              "      <td>30.291667</td>\n",
              "      <td>27.690625</td>\n",
              "      <td>68.968333</td>\n",
              "      <td>100959.652500</td>\n",
              "      <td>5.127500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-22</th>\n",
              "      <td>19.833333</td>\n",
              "      <td>42.208333</td>\n",
              "      <td>26.709583</td>\n",
              "      <td>54.358333</td>\n",
              "      <td>101258.335000</td>\n",
              "      <td>4.530000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-23</th>\n",
              "      <td>26.791667</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>28.483333</td>\n",
              "      <td>46.675000</td>\n",
              "      <td>101365.215833</td>\n",
              "      <td>5.293333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-24</th>\n",
              "      <td>26.958333</td>\n",
              "      <td>60.375000</td>\n",
              "      <td>28.185000</td>\n",
              "      <td>40.206667</td>\n",
              "      <td>101423.373333</td>\n",
              "      <td>5.746667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-25</th>\n",
              "      <td>32.208333</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>28.347500</td>\n",
              "      <td>37.146667</td>\n",
              "      <td>101382.408750</td>\n",
              "      <td>4.945833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-26</th>\n",
              "      <td>34.291667</td>\n",
              "      <td>71.000000</td>\n",
              "      <td>29.384792</td>\n",
              "      <td>31.671250</td>\n",
              "      <td>101285.759167</td>\n",
              "      <td>4.768750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-27</th>\n",
              "      <td>40.000000</td>\n",
              "      <td>77.875000</td>\n",
              "      <td>29.820625</td>\n",
              "      <td>37.101250</td>\n",
              "      <td>101162.209583</td>\n",
              "      <td>5.065417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-28</th>\n",
              "      <td>45.166667</td>\n",
              "      <td>84.708333</td>\n",
              "      <td>30.863333</td>\n",
              "      <td>55.256667</td>\n",
              "      <td>101085.130000</td>\n",
              "      <td>3.958333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-01</th>\n",
              "      <td>41.500000</td>\n",
              "      <td>79.208333</td>\n",
              "      <td>30.993125</td>\n",
              "      <td>63.140000</td>\n",
              "      <td>101017.970000</td>\n",
              "      <td>4.261250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-02</th>\n",
              "      <td>24.833333</td>\n",
              "      <td>57.041667</td>\n",
              "      <td>30.796667</td>\n",
              "      <td>63.590833</td>\n",
              "      <td>101032.304583</td>\n",
              "      <td>4.887500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-03</th>\n",
              "      <td>21.000000</td>\n",
              "      <td>51.600000</td>\n",
              "      <td>30.635667</td>\n",
              "      <td>67.376000</td>\n",
              "      <td>101019.763333</td>\n",
              "      <td>4.973333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-04</th>\n",
              "      <td>19.416667</td>\n",
              "      <td>49.375000</td>\n",
              "      <td>31.820833</td>\n",
              "      <td>60.281250</td>\n",
              "      <td>100867.618750</td>\n",
              "      <td>4.626250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-05</th>\n",
              "      <td>21.647059</td>\n",
              "      <td>54.352941</td>\n",
              "      <td>31.731471</td>\n",
              "      <td>60.834706</td>\n",
              "      <td>100788.470000</td>\n",
              "      <td>4.971176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-06</th>\n",
              "      <td>23.823529</td>\n",
              "      <td>52.352941</td>\n",
              "      <td>30.615294</td>\n",
              "      <td>67.195882</td>\n",
              "      <td>100846.024706</td>\n",
              "      <td>5.105294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-07</th>\n",
              "      <td>19.000000</td>\n",
              "      <td>45.350000</td>\n",
              "      <td>30.208000</td>\n",
              "      <td>65.776500</td>\n",
              "      <td>100921.833000</td>\n",
              "      <td>5.464000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-08</th>\n",
              "      <td>18.055556</td>\n",
              "      <td>43.277778</td>\n",
              "      <td>29.826944</td>\n",
              "      <td>57.077778</td>\n",
              "      <td>100968.315556</td>\n",
              "      <td>5.733889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-09</th>\n",
              "      <td>41.294118</td>\n",
              "      <td>71.705882</td>\n",
              "      <td>31.479118</td>\n",
              "      <td>57.029412</td>\n",
              "      <td>100841.031765</td>\n",
              "      <td>4.004118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-10</th>\n",
              "      <td>52.888889</td>\n",
              "      <td>88.555556</td>\n",
              "      <td>30.965556</td>\n",
              "      <td>69.601111</td>\n",
              "      <td>100800.673333</td>\n",
              "      <td>4.247778</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0468e35-1d4b-4c9b-a883-3f99cfd6358c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f0468e35-1d4b-4c9b-a883-3f99cfd6358c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f0468e35-1d4b-4c9b-a883-3f99cfd6358c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                PM2.5       PM10  temperature   humidity       pressure  \\\n",
              "date                                                                      \n",
              "2022-02-09  39.958333  76.333333    30.171250  66.810000  101017.922500   \n",
              "2022-02-10  25.458333  56.833333    29.790000  70.187500  100984.887500   \n",
              "2022-02-11  21.083333  51.708333    30.286667  66.803750  100896.117500   \n",
              "2022-02-12  24.458333  54.333333    29.600833  68.509167  100810.662500   \n",
              "2022-02-13  30.583333  59.833333    30.183750  66.647500  100687.890000   \n",
              "2022-02-14  21.291667  46.041667    28.958333  72.225417  100815.136250   \n",
              "2022-02-15  22.000000  50.166667    28.970208  65.687500  100881.781667   \n",
              "2022-02-16  33.625000  61.916667    28.447708  68.334167  100782.225000   \n",
              "2022-02-17  50.739130  86.652174    29.034130  69.682609  100684.238261   \n",
              "2022-02-18  21.000000  54.875000    28.765208  72.440417  100823.160417   \n",
              "2022-02-19  11.083333  36.958333    29.787292  68.488333  100900.116667   \n",
              "2022-02-20  10.000000  30.833333    29.868750  66.522500  100808.524583   \n",
              "2022-02-21  10.250000  30.291667    27.690625  68.968333  100959.652500   \n",
              "2022-02-22  19.833333  42.208333    26.709583  54.358333  101258.335000   \n",
              "2022-02-23  26.791667  59.000000    28.483333  46.675000  101365.215833   \n",
              "2022-02-24  26.958333  60.375000    28.185000  40.206667  101423.373333   \n",
              "2022-02-25  32.208333  70.000000    28.347500  37.146667  101382.408750   \n",
              "2022-02-26  34.291667  71.000000    29.384792  31.671250  101285.759167   \n",
              "2022-02-27  40.000000  77.875000    29.820625  37.101250  101162.209583   \n",
              "2022-02-28  45.166667  84.708333    30.863333  55.256667  101085.130000   \n",
              "2022-03-01  41.500000  79.208333    30.993125  63.140000  101017.970000   \n",
              "2022-03-02  24.833333  57.041667    30.796667  63.590833  101032.304583   \n",
              "2022-03-03  21.000000  51.600000    30.635667  67.376000  101019.763333   \n",
              "2022-03-04  19.416667  49.375000    31.820833  60.281250  100867.618750   \n",
              "2022-03-05  21.647059  54.352941    31.731471  60.834706  100788.470000   \n",
              "2022-03-06  23.823529  52.352941    30.615294  67.195882  100846.024706   \n",
              "2022-03-07  19.000000  45.350000    30.208000  65.776500  100921.833000   \n",
              "2022-03-08  18.055556  43.277778    29.826944  57.077778  100968.315556   \n",
              "2022-03-09  41.294118  71.705882    31.479118  57.029412  100841.031765   \n",
              "2022-03-10  52.888889  88.555556    30.965556  69.601111  100800.673333   \n",
              "\n",
              "            wind_speed  \n",
              "date                    \n",
              "2022-02-09    4.692500  \n",
              "2022-02-10    4.600000  \n",
              "2022-02-11    4.810000  \n",
              "2022-02-12    5.150000  \n",
              "2022-02-13    4.052500  \n",
              "2022-02-14    4.232500  \n",
              "2022-02-15    5.105000  \n",
              "2022-02-16    5.913333  \n",
              "2022-02-17    5.259565  \n",
              "2022-02-18    4.363333  \n",
              "2022-02-19    4.910000  \n",
              "2022-02-20    4.953333  \n",
              "2022-02-21    5.127500  \n",
              "2022-02-22    4.530000  \n",
              "2022-02-23    5.293333  \n",
              "2022-02-24    5.746667  \n",
              "2022-02-25    4.945833  \n",
              "2022-02-26    4.768750  \n",
              "2022-02-27    5.065417  \n",
              "2022-02-28    3.958333  \n",
              "2022-03-01    4.261250  \n",
              "2022-03-02    4.887500  \n",
              "2022-03-03    4.973333  \n",
              "2022-03-04    4.626250  \n",
              "2022-03-05    4.971176  \n",
              "2022-03-06    5.105294  \n",
              "2022-03-07    5.464000  \n",
              "2022-03-08    5.733889  \n",
              "2022-03-09    4.004118  \n",
              "2022-03-10    4.247778  "
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WwkgX0jxGlQn"
      },
      "source": [
        "real_data = df_r.copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "aSPkULw6GlUA",
        "outputId": "d3c8754c-29e2-44f1-de21-472b4eae73e2"
      },
      "source": [
        "real_data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f4ec11e0-5d57-4f1c-8f1e-27263ae70695\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>PM10</th>\n",
              "      <th>temperature</th>\n",
              "      <th>humidity</th>\n",
              "      <th>pressure</th>\n",
              "      <th>wind_speed</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-02-09</th>\n",
              "      <td>39.958333</td>\n",
              "      <td>76.333333</td>\n",
              "      <td>30.171250</td>\n",
              "      <td>66.810000</td>\n",
              "      <td>101017.922500</td>\n",
              "      <td>4.692500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-10</th>\n",
              "      <td>25.458333</td>\n",
              "      <td>56.833333</td>\n",
              "      <td>29.790000</td>\n",
              "      <td>70.187500</td>\n",
              "      <td>100984.887500</td>\n",
              "      <td>4.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-11</th>\n",
              "      <td>21.083333</td>\n",
              "      <td>51.708333</td>\n",
              "      <td>30.286667</td>\n",
              "      <td>66.803750</td>\n",
              "      <td>100896.117500</td>\n",
              "      <td>4.810000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-12</th>\n",
              "      <td>24.458333</td>\n",
              "      <td>54.333333</td>\n",
              "      <td>29.600833</td>\n",
              "      <td>68.509167</td>\n",
              "      <td>100810.662500</td>\n",
              "      <td>5.150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-13</th>\n",
              "      <td>30.583333</td>\n",
              "      <td>59.833333</td>\n",
              "      <td>30.183750</td>\n",
              "      <td>66.647500</td>\n",
              "      <td>100687.890000</td>\n",
              "      <td>4.052500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-14</th>\n",
              "      <td>21.291667</td>\n",
              "      <td>46.041667</td>\n",
              "      <td>28.958333</td>\n",
              "      <td>72.225417</td>\n",
              "      <td>100815.136250</td>\n",
              "      <td>4.232500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-15</th>\n",
              "      <td>22.000000</td>\n",
              "      <td>50.166667</td>\n",
              "      <td>28.970208</td>\n",
              "      <td>65.687500</td>\n",
              "      <td>100881.781667</td>\n",
              "      <td>5.105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-16</th>\n",
              "      <td>33.625000</td>\n",
              "      <td>61.916667</td>\n",
              "      <td>28.447708</td>\n",
              "      <td>68.334167</td>\n",
              "      <td>100782.225000</td>\n",
              "      <td>5.913333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-17</th>\n",
              "      <td>50.739130</td>\n",
              "      <td>86.652174</td>\n",
              "      <td>29.034130</td>\n",
              "      <td>69.682609</td>\n",
              "      <td>100684.238261</td>\n",
              "      <td>5.259565</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-18</th>\n",
              "      <td>21.000000</td>\n",
              "      <td>54.875000</td>\n",
              "      <td>28.765208</td>\n",
              "      <td>72.440417</td>\n",
              "      <td>100823.160417</td>\n",
              "      <td>4.363333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-19</th>\n",
              "      <td>11.083333</td>\n",
              "      <td>36.958333</td>\n",
              "      <td>29.787292</td>\n",
              "      <td>68.488333</td>\n",
              "      <td>100900.116667</td>\n",
              "      <td>4.910000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-20</th>\n",
              "      <td>10.000000</td>\n",
              "      <td>30.833333</td>\n",
              "      <td>29.868750</td>\n",
              "      <td>66.522500</td>\n",
              "      <td>100808.524583</td>\n",
              "      <td>4.953333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-21</th>\n",
              "      <td>10.250000</td>\n",
              "      <td>30.291667</td>\n",
              "      <td>27.690625</td>\n",
              "      <td>68.968333</td>\n",
              "      <td>100959.652500</td>\n",
              "      <td>5.127500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-22</th>\n",
              "      <td>19.833333</td>\n",
              "      <td>42.208333</td>\n",
              "      <td>26.709583</td>\n",
              "      <td>54.358333</td>\n",
              "      <td>101258.335000</td>\n",
              "      <td>4.530000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-23</th>\n",
              "      <td>26.791667</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>28.483333</td>\n",
              "      <td>46.675000</td>\n",
              "      <td>101365.215833</td>\n",
              "      <td>5.293333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-24</th>\n",
              "      <td>26.958333</td>\n",
              "      <td>60.375000</td>\n",
              "      <td>28.185000</td>\n",
              "      <td>40.206667</td>\n",
              "      <td>101423.373333</td>\n",
              "      <td>5.746667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-25</th>\n",
              "      <td>32.208333</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>28.347500</td>\n",
              "      <td>37.146667</td>\n",
              "      <td>101382.408750</td>\n",
              "      <td>4.945833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-26</th>\n",
              "      <td>34.291667</td>\n",
              "      <td>71.000000</td>\n",
              "      <td>29.384792</td>\n",
              "      <td>31.671250</td>\n",
              "      <td>101285.759167</td>\n",
              "      <td>4.768750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-27</th>\n",
              "      <td>40.000000</td>\n",
              "      <td>77.875000</td>\n",
              "      <td>29.820625</td>\n",
              "      <td>37.101250</td>\n",
              "      <td>101162.209583</td>\n",
              "      <td>5.065417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-02-28</th>\n",
              "      <td>45.166667</td>\n",
              "      <td>84.708333</td>\n",
              "      <td>30.863333</td>\n",
              "      <td>55.256667</td>\n",
              "      <td>101085.130000</td>\n",
              "      <td>3.958333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-01</th>\n",
              "      <td>41.500000</td>\n",
              "      <td>79.208333</td>\n",
              "      <td>30.993125</td>\n",
              "      <td>63.140000</td>\n",
              "      <td>101017.970000</td>\n",
              "      <td>4.261250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-02</th>\n",
              "      <td>24.833333</td>\n",
              "      <td>57.041667</td>\n",
              "      <td>30.796667</td>\n",
              "      <td>63.590833</td>\n",
              "      <td>101032.304583</td>\n",
              "      <td>4.887500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-03</th>\n",
              "      <td>21.000000</td>\n",
              "      <td>51.600000</td>\n",
              "      <td>30.635667</td>\n",
              "      <td>67.376000</td>\n",
              "      <td>101019.763333</td>\n",
              "      <td>4.973333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-04</th>\n",
              "      <td>19.416667</td>\n",
              "      <td>49.375000</td>\n",
              "      <td>31.820833</td>\n",
              "      <td>60.281250</td>\n",
              "      <td>100867.618750</td>\n",
              "      <td>4.626250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-05</th>\n",
              "      <td>21.647059</td>\n",
              "      <td>54.352941</td>\n",
              "      <td>31.731471</td>\n",
              "      <td>60.834706</td>\n",
              "      <td>100788.470000</td>\n",
              "      <td>4.971176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-06</th>\n",
              "      <td>23.823529</td>\n",
              "      <td>52.352941</td>\n",
              "      <td>30.615294</td>\n",
              "      <td>67.195882</td>\n",
              "      <td>100846.024706</td>\n",
              "      <td>5.105294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-07</th>\n",
              "      <td>19.000000</td>\n",
              "      <td>45.350000</td>\n",
              "      <td>30.208000</td>\n",
              "      <td>65.776500</td>\n",
              "      <td>100921.833000</td>\n",
              "      <td>5.464000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-08</th>\n",
              "      <td>18.055556</td>\n",
              "      <td>43.277778</td>\n",
              "      <td>29.826944</td>\n",
              "      <td>57.077778</td>\n",
              "      <td>100968.315556</td>\n",
              "      <td>5.733889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-09</th>\n",
              "      <td>41.294118</td>\n",
              "      <td>71.705882</td>\n",
              "      <td>31.479118</td>\n",
              "      <td>57.029412</td>\n",
              "      <td>100841.031765</td>\n",
              "      <td>4.004118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-10</th>\n",
              "      <td>52.888889</td>\n",
              "      <td>88.555556</td>\n",
              "      <td>30.965556</td>\n",
              "      <td>69.601111</td>\n",
              "      <td>100800.673333</td>\n",
              "      <td>4.247778</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4ec11e0-5d57-4f1c-8f1e-27263ae70695')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f4ec11e0-5d57-4f1c-8f1e-27263ae70695 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f4ec11e0-5d57-4f1c-8f1e-27263ae70695');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                PM2.5       PM10  temperature   humidity       pressure  \\\n",
              "date                                                                      \n",
              "2022-02-09  39.958333  76.333333    30.171250  66.810000  101017.922500   \n",
              "2022-02-10  25.458333  56.833333    29.790000  70.187500  100984.887500   \n",
              "2022-02-11  21.083333  51.708333    30.286667  66.803750  100896.117500   \n",
              "2022-02-12  24.458333  54.333333    29.600833  68.509167  100810.662500   \n",
              "2022-02-13  30.583333  59.833333    30.183750  66.647500  100687.890000   \n",
              "2022-02-14  21.291667  46.041667    28.958333  72.225417  100815.136250   \n",
              "2022-02-15  22.000000  50.166667    28.970208  65.687500  100881.781667   \n",
              "2022-02-16  33.625000  61.916667    28.447708  68.334167  100782.225000   \n",
              "2022-02-17  50.739130  86.652174    29.034130  69.682609  100684.238261   \n",
              "2022-02-18  21.000000  54.875000    28.765208  72.440417  100823.160417   \n",
              "2022-02-19  11.083333  36.958333    29.787292  68.488333  100900.116667   \n",
              "2022-02-20  10.000000  30.833333    29.868750  66.522500  100808.524583   \n",
              "2022-02-21  10.250000  30.291667    27.690625  68.968333  100959.652500   \n",
              "2022-02-22  19.833333  42.208333    26.709583  54.358333  101258.335000   \n",
              "2022-02-23  26.791667  59.000000    28.483333  46.675000  101365.215833   \n",
              "2022-02-24  26.958333  60.375000    28.185000  40.206667  101423.373333   \n",
              "2022-02-25  32.208333  70.000000    28.347500  37.146667  101382.408750   \n",
              "2022-02-26  34.291667  71.000000    29.384792  31.671250  101285.759167   \n",
              "2022-02-27  40.000000  77.875000    29.820625  37.101250  101162.209583   \n",
              "2022-02-28  45.166667  84.708333    30.863333  55.256667  101085.130000   \n",
              "2022-03-01  41.500000  79.208333    30.993125  63.140000  101017.970000   \n",
              "2022-03-02  24.833333  57.041667    30.796667  63.590833  101032.304583   \n",
              "2022-03-03  21.000000  51.600000    30.635667  67.376000  101019.763333   \n",
              "2022-03-04  19.416667  49.375000    31.820833  60.281250  100867.618750   \n",
              "2022-03-05  21.647059  54.352941    31.731471  60.834706  100788.470000   \n",
              "2022-03-06  23.823529  52.352941    30.615294  67.195882  100846.024706   \n",
              "2022-03-07  19.000000  45.350000    30.208000  65.776500  100921.833000   \n",
              "2022-03-08  18.055556  43.277778    29.826944  57.077778  100968.315556   \n",
              "2022-03-09  41.294118  71.705882    31.479118  57.029412  100841.031765   \n",
              "2022-03-10  52.888889  88.555556    30.965556  69.601111  100800.673333   \n",
              "\n",
              "            wind_speed  \n",
              "date                    \n",
              "2022-02-09    4.692500  \n",
              "2022-02-10    4.600000  \n",
              "2022-02-11    4.810000  \n",
              "2022-02-12    5.150000  \n",
              "2022-02-13    4.052500  \n",
              "2022-02-14    4.232500  \n",
              "2022-02-15    5.105000  \n",
              "2022-02-16    5.913333  \n",
              "2022-02-17    5.259565  \n",
              "2022-02-18    4.363333  \n",
              "2022-02-19    4.910000  \n",
              "2022-02-20    4.953333  \n",
              "2022-02-21    5.127500  \n",
              "2022-02-22    4.530000  \n",
              "2022-02-23    5.293333  \n",
              "2022-02-24    5.746667  \n",
              "2022-02-25    4.945833  \n",
              "2022-02-26    4.768750  \n",
              "2022-02-27    5.065417  \n",
              "2022-02-28    3.958333  \n",
              "2022-03-01    4.261250  \n",
              "2022-03-02    4.887500  \n",
              "2022-03-03    4.973333  \n",
              "2022-03-04    4.626250  \n",
              "2022-03-05    4.971176  \n",
              "2022-03-06    5.105294  \n",
              "2022-03-07    5.464000  \n",
              "2022-03-08    5.733889  \n",
              "2022-03-09    4.004118  \n",
              "2022-03-10    4.247778  "
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1j7UkyZbG7K6"
      },
      "source": [
        "# ใส่ฟังก์ชันสำหรับประมวลผลข้อมูล Time series หลายตัวแปร + ทำ min max scaling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "17ybLYd4GlXB"
      },
      "source": [
        "# function สำหรับ preprocess ข้อมูล time series หลายตัวแปร\n",
        "def series_to_supervised(data, n_in=1, n_out=1, dropnan=True,feat_name=None):\n",
        "    \n",
        "    n_vars = 1 if type(data) is list else data.shape[1]\n",
        "    df = pd.DataFrame(data)\n",
        "    cols, names = list(), list()\n",
        "    \n",
        "    # input sequence (t-n, ... t-1)\n",
        "    for i in range(n_in, 0, -1):\n",
        "        cols.append(df.shift(i))\n",
        "        names += [f'{feat_name[j]}(t-{i})' for j in range(n_vars)]\n",
        "    \n",
        "    # forecast sequence (t, t+1, ... t+n)\n",
        "    for i in range(0, n_out):\n",
        "        cols.append(df.shift(-i))\n",
        "        if i == 0:\n",
        "            names += [f'{feat_name[j]}(t)' for j in range(n_vars)]\n",
        "        else:\n",
        "            names += [f'{feat_name[j]}(t+{i})' for j in range(n_vars)]\n",
        "    \n",
        "    # put it all together\n",
        "    agg = pd.concat(cols, axis=1)\n",
        "    agg.columns = names\n",
        "    \n",
        "    # drop rows with NaN values\n",
        "    if dropnan:\n",
        "        agg.dropna(inplace=True)\n",
        "    return agg\n",
        "\n",
        "# เลือกข้อมูลหุ้นจาก list ของ DataFrame และ drop column 'Close' เนื่องจากเราจะใช้ column 'Adj. Close' เท่านั้น\n",
        "\n",
        "dataset = df_r\n",
        "values = dataset.values\n",
        "values = values.astype('float32')\n",
        "\n",
        "# ทำ scaling ข้อมูลด้วยวิธี min max scaling เปลี่ยน scale ข้อมูลแต่ละ column ให้อยู่ระหว่าง [0,1] และเก็บค่า min max แต่ละ column ไว้สำหรับทำ rescale ข้อมูลภายหลัง\n",
        "min_dict = dict()\n",
        "max_dict = dict()\n",
        "for col in dataset.columns:\n",
        "  min_dict[col] = dataset[col].min()\n",
        "  max_dict[col] = dataset[col].max()\n",
        "  dataset[col] = (dataset[col] - dataset[col].min())/(dataset[col].max()-dataset[col].min())\n",
        "  \n",
        "# ใช้ function สำหรับ preprocess ข้อมูลที่เขียนไว้ และ drop column ที่ไม่ได้ใช้\n",
        "reframed = series_to_supervised(dataset.values, 29, 1,feat_name=df_r.columns)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        },
        "id": "ulxBxgwhG3z3",
        "outputId": "072514cc-653c-4a1b-bc54-9ba23246bec1"
      },
      "source": [
        "reframed"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-3b22e96c-357b-4a4d-8e7e-d7353b6fb6e8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM2.5(t-29)</th>\n",
              "      <th>PM10(t-29)</th>\n",
              "      <th>temperature(t-29)</th>\n",
              "      <th>humidity(t-29)</th>\n",
              "      <th>pressure(t-29)</th>\n",
              "      <th>wind_speed(t-29)</th>\n",
              "      <th>PM2.5(t-28)</th>\n",
              "      <th>PM10(t-28)</th>\n",
              "      <th>temperature(t-28)</th>\n",
              "      <th>humidity(t-28)</th>\n",
              "      <th>pressure(t-28)</th>\n",
              "      <th>wind_speed(t-28)</th>\n",
              "      <th>PM2.5(t-27)</th>\n",
              "      <th>PM10(t-27)</th>\n",
              "      <th>temperature(t-27)</th>\n",
              "      <th>humidity(t-27)</th>\n",
              "      <th>pressure(t-27)</th>\n",
              "      <th>wind_speed(t-27)</th>\n",
              "      <th>PM2.5(t-26)</th>\n",
              "      <th>PM10(t-26)</th>\n",
              "      <th>temperature(t-26)</th>\n",
              "      <th>humidity(t-26)</th>\n",
              "      <th>pressure(t-26)</th>\n",
              "      <th>wind_speed(t-26)</th>\n",
              "      <th>PM2.5(t-25)</th>\n",
              "      <th>PM10(t-25)</th>\n",
              "      <th>temperature(t-25)</th>\n",
              "      <th>humidity(t-25)</th>\n",
              "      <th>pressure(t-25)</th>\n",
              "      <th>wind_speed(t-25)</th>\n",
              "      <th>PM2.5(t-24)</th>\n",
              "      <th>PM10(t-24)</th>\n",
              "      <th>temperature(t-24)</th>\n",
              "      <th>humidity(t-24)</th>\n",
              "      <th>pressure(t-24)</th>\n",
              "      <th>wind_speed(t-24)</th>\n",
              "      <th>PM2.5(t-23)</th>\n",
              "      <th>PM10(t-23)</th>\n",
              "      <th>temperature(t-23)</th>\n",
              "      <th>humidity(t-23)</th>\n",
              "      <th>pressure(t-23)</th>\n",
              "      <th>wind_speed(t-23)</th>\n",
              "      <th>PM2.5(t-22)</th>\n",
              "      <th>PM10(t-22)</th>\n",
              "      <th>temperature(t-22)</th>\n",
              "      <th>humidity(t-22)</th>\n",
              "      <th>pressure(t-22)</th>\n",
              "      <th>wind_speed(t-22)</th>\n",
              "      <th>PM2.5(t-21)</th>\n",
              "      <th>PM10(t-21)</th>\n",
              "      <th>temperature(t-21)</th>\n",
              "      <th>humidity(t-21)</th>\n",
              "      <th>pressure(t-21)</th>\n",
              "      <th>wind_speed(t-21)</th>\n",
              "      <th>PM2.5(t-20)</th>\n",
              "      <th>PM10(t-20)</th>\n",
              "      <th>temperature(t-20)</th>\n",
              "      <th>humidity(t-20)</th>\n",
              "      <th>pressure(t-20)</th>\n",
              "      <th>wind_speed(t-20)</th>\n",
              "      <th>PM2.5(t-19)</th>\n",
              "      <th>PM10(t-19)</th>\n",
              "      <th>temperature(t-19)</th>\n",
              "      <th>humidity(t-19)</th>\n",
              "      <th>pressure(t-19)</th>\n",
              "      <th>wind_speed(t-19)</th>\n",
              "      <th>PM2.5(t-18)</th>\n",
              "      <th>PM10(t-18)</th>\n",
              "      <th>temperature(t-18)</th>\n",
              "      <th>humidity(t-18)</th>\n",
              "      <th>pressure(t-18)</th>\n",
              "      <th>wind_speed(t-18)</th>\n",
              "      <th>PM2.5(t-17)</th>\n",
              "      <th>PM10(t-17)</th>\n",
              "      <th>temperature(t-17)</th>\n",
              "      <th>humidity(t-17)</th>\n",
              "      <th>pressure(t-17)</th>\n",
              "      <th>wind_speed(t-17)</th>\n",
              "      <th>PM2.5(t-16)</th>\n",
              "      <th>PM10(t-16)</th>\n",
              "      <th>temperature(t-16)</th>\n",
              "      <th>humidity(t-16)</th>\n",
              "      <th>pressure(t-16)</th>\n",
              "      <th>wind_speed(t-16)</th>\n",
              "      <th>PM2.5(t-15)</th>\n",
              "      <th>PM10(t-15)</th>\n",
              "      <th>temperature(t-15)</th>\n",
              "      <th>humidity(t-15)</th>\n",
              "      <th>pressure(t-15)</th>\n",
              "      <th>wind_speed(t-15)</th>\n",
              "      <th>PM2.5(t-14)</th>\n",
              "      <th>PM10(t-14)</th>\n",
              "      <th>temperature(t-14)</th>\n",
              "      <th>humidity(t-14)</th>\n",
              "      <th>pressure(t-14)</th>\n",
              "      <th>wind_speed(t-14)</th>\n",
              "      <th>PM2.5(t-13)</th>\n",
              "      <th>PM10(t-13)</th>\n",
              "      <th>temperature(t-13)</th>\n",
              "      <th>humidity(t-13)</th>\n",
              "      <th>pressure(t-13)</th>\n",
              "      <th>wind_speed(t-13)</th>\n",
              "      <th>PM2.5(t-12)</th>\n",
              "      <th>PM10(t-12)</th>\n",
              "      <th>temperature(t-12)</th>\n",
              "      <th>humidity(t-12)</th>\n",
              "      <th>pressure(t-12)</th>\n",
              "      <th>wind_speed(t-12)</th>\n",
              "      <th>PM2.5(t-11)</th>\n",
              "      <th>PM10(t-11)</th>\n",
              "      <th>temperature(t-11)</th>\n",
              "      <th>humidity(t-11)</th>\n",
              "      <th>pressure(t-11)</th>\n",
              "      <th>wind_speed(t-11)</th>\n",
              "      <th>PM2.5(t-10)</th>\n",
              "      <th>PM10(t-10)</th>\n",
              "      <th>temperature(t-10)</th>\n",
              "      <th>humidity(t-10)</th>\n",
              "      <th>pressure(t-10)</th>\n",
              "      <th>wind_speed(t-10)</th>\n",
              "      <th>PM2.5(t-9)</th>\n",
              "      <th>PM10(t-9)</th>\n",
              "      <th>temperature(t-9)</th>\n",
              "      <th>humidity(t-9)</th>\n",
              "      <th>pressure(t-9)</th>\n",
              "      <th>wind_speed(t-9)</th>\n",
              "      <th>PM2.5(t-8)</th>\n",
              "      <th>PM10(t-8)</th>\n",
              "      <th>temperature(t-8)</th>\n",
              "      <th>humidity(t-8)</th>\n",
              "      <th>pressure(t-8)</th>\n",
              "      <th>wind_speed(t-8)</th>\n",
              "      <th>PM2.5(t-7)</th>\n",
              "      <th>PM10(t-7)</th>\n",
              "      <th>temperature(t-7)</th>\n",
              "      <th>humidity(t-7)</th>\n",
              "      <th>pressure(t-7)</th>\n",
              "      <th>wind_speed(t-7)</th>\n",
              "      <th>PM2.5(t-6)</th>\n",
              "      <th>PM10(t-6)</th>\n",
              "      <th>temperature(t-6)</th>\n",
              "      <th>humidity(t-6)</th>\n",
              "      <th>pressure(t-6)</th>\n",
              "      <th>wind_speed(t-6)</th>\n",
              "      <th>PM2.5(t-5)</th>\n",
              "      <th>PM10(t-5)</th>\n",
              "      <th>temperature(t-5)</th>\n",
              "      <th>humidity(t-5)</th>\n",
              "      <th>pressure(t-5)</th>\n",
              "      <th>wind_speed(t-5)</th>\n",
              "      <th>PM2.5(t-4)</th>\n",
              "      <th>PM10(t-4)</th>\n",
              "      <th>temperature(t-4)</th>\n",
              "      <th>humidity(t-4)</th>\n",
              "      <th>pressure(t-4)</th>\n",
              "      <th>wind_speed(t-4)</th>\n",
              "      <th>PM2.5(t-3)</th>\n",
              "      <th>PM10(t-3)</th>\n",
              "      <th>temperature(t-3)</th>\n",
              "      <th>humidity(t-3)</th>\n",
              "      <th>pressure(t-3)</th>\n",
              "      <th>wind_speed(t-3)</th>\n",
              "      <th>PM2.5(t-2)</th>\n",
              "      <th>PM10(t-2)</th>\n",
              "      <th>temperature(t-2)</th>\n",
              "      <th>humidity(t-2)</th>\n",
              "      <th>pressure(t-2)</th>\n",
              "      <th>wind_speed(t-2)</th>\n",
              "      <th>PM2.5(t-1)</th>\n",
              "      <th>PM10(t-1)</th>\n",
              "      <th>temperature(t-1)</th>\n",
              "      <th>humidity(t-1)</th>\n",
              "      <th>pressure(t-1)</th>\n",
              "      <th>wind_speed(t-1)</th>\n",
              "      <th>PM2.5(t)</th>\n",
              "      <th>PM10(t)</th>\n",
              "      <th>temperature(t)</th>\n",
              "      <th>humidity(t)</th>\n",
              "      <th>pressure(t)</th>\n",
              "      <th>wind_speed(t)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0.69851</td>\n",
              "      <td>0.790226</td>\n",
              "      <td>0.677264</td>\n",
              "      <td>0.861895</td>\n",
              "      <td>0.451452</td>\n",
              "      <td>0.375533</td>\n",
              "      <td>0.360427</td>\n",
              "      <td>0.455542</td>\n",
              "      <td>0.602674</td>\n",
              "      <td>0.94474</td>\n",
              "      <td>0.406758</td>\n",
              "      <td>0.328218</td>\n",
              "      <td>0.25842</td>\n",
              "      <td>0.36758</td>\n",
              "      <td>0.699845</td>\n",
              "      <td>0.861742</td>\n",
              "      <td>0.286658</td>\n",
              "      <td>0.435635</td>\n",
              "      <td>0.337111</td>\n",
              "      <td>0.412634</td>\n",
              "      <td>0.565664</td>\n",
              "      <td>0.903573</td>\n",
              "      <td>0.171043</td>\n",
              "      <td>0.609548</td>\n",
              "      <td>0.479922</td>\n",
              "      <td>0.507032</td>\n",
              "      <td>0.67971</td>\n",
              "      <td>0.857909</td>\n",
              "      <td>0.004941</td>\n",
              "      <td>0.048167</td>\n",
              "      <td>0.263277</td>\n",
              "      <td>0.270322</td>\n",
              "      <td>0.439961</td>\n",
              "      <td>0.994726</td>\n",
              "      <td>0.177096</td>\n",
              "      <td>0.140239</td>\n",
              "      <td>0.279793</td>\n",
              "      <td>0.34112</td>\n",
              "      <td>0.442284</td>\n",
              "      <td>0.834362</td>\n",
              "      <td>0.267263</td>\n",
              "      <td>0.58653</td>\n",
              "      <td>0.550842</td>\n",
              "      <td>0.542789</td>\n",
              "      <td>0.340059</td>\n",
              "      <td>0.899281</td>\n",
              "      <td>0.132569</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.949876</td>\n",
              "      <td>0.967332</td>\n",
              "      <td>0.45479</td>\n",
              "      <td>0.932356</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.665592</td>\n",
              "      <td>0.256477</td>\n",
              "      <td>0.421931</td>\n",
              "      <td>0.402177</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.187952</td>\n",
              "      <td>0.207161</td>\n",
              "      <td>0.025259</td>\n",
              "      <td>0.114422</td>\n",
              "      <td>0.602144</td>\n",
              "      <td>0.903062</td>\n",
              "      <td>0.292069</td>\n",
              "      <td>0.486786</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.009297</td>\n",
              "      <td>0.618081</td>\n",
              "      <td>0.854843</td>\n",
              "      <td>0.168151</td>\n",
              "      <td>0.508951</td>\n",
              "      <td>0.005829</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.191938</td>\n",
              "      <td>0.914836</td>\n",
              "      <td>0.372617</td>\n",
              "      <td>0.598039</td>\n",
              "      <td>0.229275</td>\n",
              "      <td>0.204529</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.556477</td>\n",
              "      <td>0.776714</td>\n",
              "      <td>0.292413</td>\n",
              "      <td>0.391516</td>\n",
              "      <td>0.492729</td>\n",
              "      <td>0.347029</td>\n",
              "      <td>0.368017</td>\n",
              "      <td>0.921317</td>\n",
              "      <td>0.682864</td>\n",
              "      <td>0.395402</td>\n",
              "      <td>0.516329</td>\n",
              "      <td>0.288661</td>\n",
              "      <td>0.20936</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.914749</td>\n",
              "      <td>0.517811</td>\n",
              "      <td>0.681526</td>\n",
              "      <td>0.320453</td>\n",
              "      <td>0.134303</td>\n",
              "      <td>0.944578</td>\n",
              "      <td>0.505115</td>\n",
              "      <td>0.566386</td>\n",
              "      <td>0.698689</td>\n",
              "      <td>0.523396</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.813817</td>\n",
              "      <td>0.414535</td>\n",
              "      <td>0.699482</td>\n",
              "      <td>0.816687</td>\n",
              "      <td>0.608666</td>\n",
              "      <td>0.133189</td>\n",
              "      <td>0.646663</td>\n",
              "      <td>0.566283</td>\n",
              "      <td>0.819948</td>\n",
              "      <td>0.933969</td>\n",
              "      <td>0.812668</td>\n",
              "      <td>0.578511</td>\n",
              "      <td>0.54238</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.734456</td>\n",
              "      <td>0.839571</td>\n",
              "      <td>0.838061</td>\n",
              "      <td>0.771876</td>\n",
              "      <td>0.451517</td>\n",
              "      <td>0.154945</td>\n",
              "      <td>0.345855</td>\n",
              "      <td>0.459118</td>\n",
              "      <td>0.799625</td>\n",
              "      <td>0.782934</td>\n",
              "      <td>0.47091</td>\n",
              "      <td>0.475277</td>\n",
              "      <td>0.256477</td>\n",
              "      <td>0.365721</td>\n",
              "      <td>0.768126</td>\n",
              "      <td>0.875778</td>\n",
              "      <td>0.453943</td>\n",
              "      <td>0.519182</td>\n",
              "      <td>0.21956</td>\n",
              "      <td>0.327533</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.701756</td>\n",
              "      <td>0.248101</td>\n",
              "      <td>0.341645</td>\n",
              "      <td>0.271564</td>\n",
              "      <td>0.412971</td>\n",
              "      <td>0.982516</td>\n",
              "      <td>0.715331</td>\n",
              "      <td>0.141019</td>\n",
              "      <td>0.518078</td>\n",
              "      <td>0.32231</td>\n",
              "      <td>0.378644</td>\n",
              "      <td>0.76414</td>\n",
              "      <td>0.87136</td>\n",
              "      <td>0.218886</td>\n",
              "      <td>0.586681</td>\n",
              "      <td>0.209845</td>\n",
              "      <td>0.258451</td>\n",
              "      <td>0.684454</td>\n",
              "      <td>0.836545</td>\n",
              "      <td>0.32145</td>\n",
              "      <td>0.770162</td>\n",
              "      <td>0.187824</td>\n",
              "      <td>0.222884</td>\n",
              "      <td>0.609902</td>\n",
              "      <td>0.62318</td>\n",
              "      <td>0.384337</td>\n",
              "      <td>0.908213</td>\n",
              "      <td>0.729656</td>\n",
              "      <td>0.710804</td>\n",
              "      <td>0.933144</td>\n",
              "      <td>0.621994</td>\n",
              "      <td>0.212131</td>\n",
              "      <td>0.023419</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.832668</td>\n",
              "      <td>0.930357</td>\n",
              "      <td>0.157529</td>\n",
              "      <td>0.148053</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b22e96c-357b-4a4d-8e7e-d7353b6fb6e8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3b22e96c-357b-4a4d-8e7e-d7353b6fb6e8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3b22e96c-357b-4a4d-8e7e-d7353b6fb6e8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    PM2.5(t-29)  PM10(t-29)  temperature(t-29)  humidity(t-29)  \\\n",
              "29      0.69851    0.790226           0.677264        0.861895   \n",
              "\n",
              "    pressure(t-29)  wind_speed(t-29)  PM2.5(t-28)  PM10(t-28)  \\\n",
              "29        0.451452          0.375533     0.360427    0.455542   \n",
              "\n",
              "    temperature(t-28)  humidity(t-28)  pressure(t-28)  wind_speed(t-28)  \\\n",
              "29           0.602674         0.94474        0.406758          0.328218   \n",
              "\n",
              "    PM2.5(t-27)  PM10(t-27)  temperature(t-27)  humidity(t-27)  \\\n",
              "29      0.25842     0.36758           0.699845        0.861742   \n",
              "\n",
              "    pressure(t-27)  wind_speed(t-27)  PM2.5(t-26)  PM10(t-26)  \\\n",
              "29        0.286658          0.435635     0.337111    0.412634   \n",
              "\n",
              "    temperature(t-26)  humidity(t-26)  pressure(t-26)  wind_speed(t-26)  \\\n",
              "29           0.565664        0.903573        0.171043          0.609548   \n",
              "\n",
              "    PM2.5(t-25)  PM10(t-25)  temperature(t-25)  humidity(t-25)  \\\n",
              "29     0.479922    0.507032            0.67971        0.857909   \n",
              "\n",
              "    pressure(t-25)  wind_speed(t-25)  PM2.5(t-24)  PM10(t-24)  \\\n",
              "29        0.004941          0.048167     0.263277    0.270322   \n",
              "\n",
              "    temperature(t-24)  humidity(t-24)  pressure(t-24)  wind_speed(t-24)  \\\n",
              "29           0.439961        0.994726        0.177096          0.140239   \n",
              "\n",
              "    PM2.5(t-23)  PM10(t-23)  temperature(t-23)  humidity(t-23)  \\\n",
              "29     0.279793     0.34112           0.442284        0.834362   \n",
              "\n",
              "    pressure(t-23)  wind_speed(t-23)  PM2.5(t-22)  PM10(t-22)  \\\n",
              "29        0.267263           0.58653     0.550842    0.542789   \n",
              "\n",
              "    temperature(t-22)  humidity(t-22)  pressure(t-22)  wind_speed(t-22)  \\\n",
              "29           0.340059        0.899281        0.132569               1.0   \n",
              "\n",
              "    PM2.5(t-21)  PM10(t-21)  temperature(t-21)  humidity(t-21)  \\\n",
              "29     0.949876    0.967332            0.45479        0.932356   \n",
              "\n",
              "    pressure(t-21)  wind_speed(t-21)  PM2.5(t-20)  PM10(t-20)  \\\n",
              "29             0.0          0.665592     0.256477    0.421931   \n",
              "\n",
              "    temperature(t-20)  humidity(t-20)  pressure(t-20)  wind_speed(t-20)  \\\n",
              "29           0.402177             1.0        0.187952          0.207161   \n",
              "\n",
              "    PM2.5(t-19)  PM10(t-19)  temperature(t-19)  humidity(t-19)  \\\n",
              "29     0.025259    0.114422           0.602144        0.903062   \n",
              "\n",
              "    pressure(t-19)  wind_speed(t-19)  PM2.5(t-18)  PM10(t-18)  \\\n",
              "29        0.292069          0.486786          0.0    0.009297   \n",
              "\n",
              "    temperature(t-18)  humidity(t-18)  pressure(t-18)  wind_speed(t-18)  \\\n",
              "29           0.618081        0.854843        0.168151          0.508951   \n",
              "\n",
              "    PM2.5(t-17)  PM10(t-17)  temperature(t-17)  humidity(t-17)  \\\n",
              "29     0.005829         0.0           0.191938        0.914836   \n",
              "\n",
              "    pressure(t-17)  wind_speed(t-17)  PM2.5(t-16)  PM10(t-16)  \\\n",
              "29        0.372617          0.598039     0.229275    0.204529   \n",
              "\n",
              "    temperature(t-16)  humidity(t-16)  pressure(t-16)  wind_speed(t-16)  \\\n",
              "29                0.0        0.556477        0.776714          0.292413   \n",
              "\n",
              "    PM2.5(t-15)  PM10(t-15)  temperature(t-15)  humidity(t-15)  \\\n",
              "29     0.391516    0.492729           0.347029        0.368017   \n",
              "\n",
              "    pressure(t-15)  wind_speed(t-15)  PM2.5(t-14)  PM10(t-14)  \\\n",
              "29        0.921317          0.682864     0.395402    0.516329   \n",
              "\n",
              "    temperature(t-14)  humidity(t-14)  pressure(t-14)  wind_speed(t-14)  \\\n",
              "29           0.288661         0.20936             1.0          0.914749   \n",
              "\n",
              "    PM2.5(t-13)  PM10(t-13)  temperature(t-13)  humidity(t-13)  \\\n",
              "29     0.517811    0.681526           0.320453        0.134303   \n",
              "\n",
              "    pressure(t-13)  wind_speed(t-13)  PM2.5(t-12)  PM10(t-12)  \\\n",
              "29        0.944578          0.505115     0.566386    0.698689   \n",
              "\n",
              "    temperature(t-12)  humidity(t-12)  pressure(t-12)  wind_speed(t-12)  \\\n",
              "29           0.523396             0.0        0.813817          0.414535   \n",
              "\n",
              "    PM2.5(t-11)  PM10(t-11)  temperature(t-11)  humidity(t-11)  \\\n",
              "29     0.699482    0.816687           0.608666        0.133189   \n",
              "\n",
              "    pressure(t-11)  wind_speed(t-11)  PM2.5(t-10)  PM10(t-10)  \\\n",
              "29        0.646663          0.566283     0.819948    0.933969   \n",
              "\n",
              "    temperature(t-10)  humidity(t-10)  pressure(t-10)  wind_speed(t-10)  \\\n",
              "29           0.812668        0.578511         0.54238               0.0   \n",
              "\n",
              "    PM2.5(t-9)  PM10(t-9)  temperature(t-9)  humidity(t-9)  pressure(t-9)  \\\n",
              "29    0.734456   0.839571          0.838061       0.771876       0.451517   \n",
              "\n",
              "    wind_speed(t-9)  PM2.5(t-8)  PM10(t-8)  temperature(t-8)  humidity(t-8)  \\\n",
              "29         0.154945    0.345855   0.459118          0.799625       0.782934   \n",
              "\n",
              "    pressure(t-8)  wind_speed(t-8)  PM2.5(t-7)  PM10(t-7)  temperature(t-7)  \\\n",
              "29        0.47091         0.475277    0.256477   0.365721          0.768126   \n",
              "\n",
              "    humidity(t-7)  pressure(t-7)  wind_speed(t-7)  PM2.5(t-6)  PM10(t-6)  \\\n",
              "29       0.875778       0.453943         0.519182     0.21956   0.327533   \n",
              "\n",
              "    temperature(t-6)  humidity(t-6)  pressure(t-6)  wind_speed(t-6)  \\\n",
              "29               1.0       0.701756       0.248101         0.341645   \n",
              "\n",
              "    PM2.5(t-5)  PM10(t-5)  temperature(t-5)  humidity(t-5)  pressure(t-5)  \\\n",
              "29    0.271564   0.412971          0.982516       0.715331       0.141019   \n",
              "\n",
              "    wind_speed(t-5)  PM2.5(t-4)  PM10(t-4)  temperature(t-4)  humidity(t-4)  \\\n",
              "29         0.518078     0.32231   0.378644           0.76414        0.87136   \n",
              "\n",
              "    pressure(t-4)  wind_speed(t-4)  PM2.5(t-3)  PM10(t-3)  temperature(t-3)  \\\n",
              "29       0.218886         0.586681    0.209845   0.258451          0.684454   \n",
              "\n",
              "    humidity(t-3)  pressure(t-3)  wind_speed(t-3)  PM2.5(t-2)  PM10(t-2)  \\\n",
              "29       0.836545        0.32145         0.770162    0.187824   0.222884   \n",
              "\n",
              "    temperature(t-2)  humidity(t-2)  pressure(t-2)  wind_speed(t-2)  \\\n",
              "29          0.609902        0.62318       0.384337         0.908213   \n",
              "\n",
              "    PM2.5(t-1)  PM10(t-1)  temperature(t-1)  humidity(t-1)  pressure(t-1)  \\\n",
              "29    0.729656   0.710804          0.933144       0.621994       0.212131   \n",
              "\n",
              "    wind_speed(t-1)  PM2.5(t)  PM10(t)  temperature(t)  humidity(t)  \\\n",
              "29         0.023419       1.0      1.0        0.832668     0.930357   \n",
              "\n",
              "    pressure(t)  wind_speed(t)  \n",
              "29     0.157529       0.148053  "
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r1ybIdwpG33t",
        "outputId": "1ea77bf4-147a-4805-8c30-2a28462f14dd"
      },
      "source": [
        "reframed.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 180)"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kYPxM00UHPbU"
      },
      "source": [
        "# กำหนด Input ให้เป็นคุณภาพอากาศ+PM2.5+PM10 ของ 30 วันก่อนหน้า เพื่อทำนาย 7 วันถัดไป"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jiVVNK4XG36H"
      },
      "source": [
        "test_X = reframed.to_numpy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gKa9His6HLcH",
        "outputId": "a5356db5-fde7-48fb-c95c-e60d1c908937"
      },
      "source": [
        "test_X"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.69851036, 0.79022646, 0.6772642 , 0.86189522, 0.45145231,\n",
              "        0.37553282, 0.36042746, 0.45554231, 0.60267384, 0.94473969,\n",
              "        0.40675818, 0.32821824, 0.25841969, 0.36758045, 0.69984511,\n",
              "        0.86174192, 0.28665835, 0.43563512, 0.3371114 , 0.41263409,\n",
              "        0.56566398, 0.90357296, 0.17104349, 0.60954817, 0.47992228,\n",
              "        0.50703218, 0.67970979, 0.85790937, 0.00494056, 0.04816709,\n",
              "        0.2632772 , 0.27032181, 0.43996087, 0.99472641, 0.17709617,\n",
              "        0.1402387 , 0.27979275, 0.34112038, 0.44228418, 0.83436216,\n",
              "        0.26726293, 0.58653026, 0.55084197, 0.54278903, 0.34005869,\n",
              "        0.8992805 , 0.13256946, 1.        , 0.9498761 , 0.96733171,\n",
              "        0.45479034, 0.93235555, 0.        , 0.66559176, 0.25647668,\n",
              "        0.42193087, 0.40217657, 1.        , 0.18795233, 0.20716113,\n",
              "        0.02525907, 0.11442193, 0.60214396, 0.90306195, 0.29206895,\n",
              "        0.48678602, 0.        , 0.00929678, 0.61808103, 0.85484333,\n",
              "        0.16815103, 0.50895141, 0.00582902, 0.        , 0.19193772,\n",
              "        0.91483556, 0.37261693, 0.59803922, 0.22927461, 0.2045292 ,\n",
              "        0.        , 0.5564765 , 0.77671424, 0.29241262, 0.39151554,\n",
              "        0.49272944, 0.34702861, 0.36801709, 0.92131682, 0.68286445,\n",
              "        0.39540155, 0.51632896, 0.28866063, 0.20935961, 1.        ,\n",
              "        0.91474851, 0.51781088, 0.68152563, 0.32045325, 0.13430288,\n",
              "        0.94457768, 0.50511509, 0.56638601, 0.69868892, 0.5233961 ,\n",
              "        0.        , 0.8138173 , 0.41453538, 0.69948187, 0.81668653,\n",
              "        0.60866553, 0.13318889, 0.64666303, 0.56628303, 0.81994819,\n",
              "        0.93396901, 0.81266813, 0.57851113, 0.54237954, 0.        ,\n",
              "        0.73445596, 0.83957092, 0.83806147, 0.77187621, 0.45151658,\n",
              "        0.15494459, 0.34585492, 0.459118  , 0.79962501, 0.78293441,\n",
              "        0.47091031, 0.47527707, 0.25647668, 0.3657211 , 0.76812587,\n",
              "        0.87577826, 0.45394284, 0.51918159, 0.21955959, 0.32753278,\n",
              "        1.        , 0.70175582, 0.24810146, 0.34164535, 0.27156355,\n",
              "        0.41297062, 0.98251646, 0.71533117, 0.14101853, 0.51807833,\n",
              "        0.32231027, 0.37864404, 0.76414004, 0.87136028, 0.21888617,\n",
              "        0.58668071, 0.20984456, 0.25845054, 0.68445423, 0.83654518,\n",
              "        0.32144969, 0.77016198, 0.18782383, 0.22288439, 0.6099019 ,\n",
              "        0.62317996, 0.38433746, 0.90821256, 0.72965559, 0.71080418,\n",
              "        0.9331444 , 0.62199363, 0.21213106, 0.02341909, 1.        ,\n",
              "        1.        , 0.83266759, 0.93035655, 0.15752882, 0.14805342]])"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_YGykjHcHLi8",
        "outputId": "e6fac699-0b46-436c-858b-b9f324284a6d"
      },
      "source": [
        "# reshape input to be 3D [samples, timesteps, features]\n",
        "test_X = test_X.reshape((test_X.shape[0], 1, test_X.shape[1]))\n",
        "test_X"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[0.69851036, 0.79022646, 0.6772642 , 0.86189522, 0.45145231,\n",
              "         0.37553282, 0.36042746, 0.45554231, 0.60267384, 0.94473969,\n",
              "         0.40675818, 0.32821824, 0.25841969, 0.36758045, 0.69984511,\n",
              "         0.86174192, 0.28665835, 0.43563512, 0.3371114 , 0.41263409,\n",
              "         0.56566398, 0.90357296, 0.17104349, 0.60954817, 0.47992228,\n",
              "         0.50703218, 0.67970979, 0.85790937, 0.00494056, 0.04816709,\n",
              "         0.2632772 , 0.27032181, 0.43996087, 0.99472641, 0.17709617,\n",
              "         0.1402387 , 0.27979275, 0.34112038, 0.44228418, 0.83436216,\n",
              "         0.26726293, 0.58653026, 0.55084197, 0.54278903, 0.34005869,\n",
              "         0.8992805 , 0.13256946, 1.        , 0.9498761 , 0.96733171,\n",
              "         0.45479034, 0.93235555, 0.        , 0.66559176, 0.25647668,\n",
              "         0.42193087, 0.40217657, 1.        , 0.18795233, 0.20716113,\n",
              "         0.02525907, 0.11442193, 0.60214396, 0.90306195, 0.29206895,\n",
              "         0.48678602, 0.        , 0.00929678, 0.61808103, 0.85484333,\n",
              "         0.16815103, 0.50895141, 0.00582902, 0.        , 0.19193772,\n",
              "         0.91483556, 0.37261693, 0.59803922, 0.22927461, 0.2045292 ,\n",
              "         0.        , 0.5564765 , 0.77671424, 0.29241262, 0.39151554,\n",
              "         0.49272944, 0.34702861, 0.36801709, 0.92131682, 0.68286445,\n",
              "         0.39540155, 0.51632896, 0.28866063, 0.20935961, 1.        ,\n",
              "         0.91474851, 0.51781088, 0.68152563, 0.32045325, 0.13430288,\n",
              "         0.94457768, 0.50511509, 0.56638601, 0.69868892, 0.5233961 ,\n",
              "         0.        , 0.8138173 , 0.41453538, 0.69948187, 0.81668653,\n",
              "         0.60866553, 0.13318889, 0.64666303, 0.56628303, 0.81994819,\n",
              "         0.93396901, 0.81266813, 0.57851113, 0.54237954, 0.        ,\n",
              "         0.73445596, 0.83957092, 0.83806147, 0.77187621, 0.45151658,\n",
              "         0.15494459, 0.34585492, 0.459118  , 0.79962501, 0.78293441,\n",
              "         0.47091031, 0.47527707, 0.25647668, 0.3657211 , 0.76812587,\n",
              "         0.87577826, 0.45394284, 0.51918159, 0.21955959, 0.32753278,\n",
              "         1.        , 0.70175582, 0.24810146, 0.34164535, 0.27156355,\n",
              "         0.41297062, 0.98251646, 0.71533117, 0.14101853, 0.51807833,\n",
              "         0.32231027, 0.37864404, 0.76414004, 0.87136028, 0.21888617,\n",
              "         0.58668071, 0.20984456, 0.25845054, 0.68445423, 0.83654518,\n",
              "         0.32144969, 0.77016198, 0.18782383, 0.22288439, 0.6099019 ,\n",
              "         0.62317996, 0.38433746, 0.90821256, 0.72965559, 0.71080418,\n",
              "         0.9331444 , 0.62199363, 0.21213106, 0.02341909, 1.        ,\n",
              "         1.        , 0.83266759, 0.93035655, 0.15752882, 0.14805342]]])"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UI9cz2tYHaSJ"
      },
      "source": [
        "# ใส่ค่า Input ใน Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SjOsKTkxHLmJ"
      },
      "source": [
        "# make a prediction\n",
        "yhat = model.predict(test_X)\n",
        "test_X = test_X.reshape((test_X.shape[0], test_X.shape[2]))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TWfHB1uWHLp4",
        "outputId": "d42eec0b-ee0c-4a18-d2e4-8f8948573ff2"
      },
      "source": [
        "yhat"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.1677024 , 0.12408449, 0.10387816, 0.08244736, 0.10774507,\n",
              "        0.14373937, 0.15176395]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TnUvgUgJHeEW"
      },
      "source": [
        "inv_yhat = yhat*(max_dict['PM2.5']-min_dict['PM2.5'])+min_dict['PM2.5']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iQz64_-vHlHO"
      },
      "source": [
        "# แสดงค่า Forcast (ไมโครกรัมต่อลูกบาศก์เมตร หรือ µg./m.)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jQYuAezhHeHs",
        "outputId": "720d5f9e-c41e-4335-9595-7357fc0db374"
      },
      "source": [
        "inv_yhat"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[17.19257 , 15.321846, 14.455219, 13.536076, 14.621067, 16.164822,\n",
              "        16.508987]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1TDwNpfEHeLw"
      },
      "source": [
        "re_sh = inv_yhat "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s2zYGuRTHePY"
      },
      "source": [
        "re_sh = re_sh.reshape(7,1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eh0mODzEHrXC"
      },
      "source": [
        "re_sh = re_sh.astype(int)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KQEG24gxHyf4"
      },
      "source": [
        "# นำข้อมูลที่ Forcast มาแสดงเป็น Dataframe"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mhoBtuXIHrar"
      },
      "source": [
        "import datetime\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "todays_date = datetime.datetime.now().date()\n",
        "date = pd.date_range(todays_date+datetime.timedelta(1), periods=7,freq='D')\n",
        "\n",
        "columns = ['PM25']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6WVmMu2GHreI"
      },
      "source": [
        "df_ = pd.DataFrame(index=date, columns=columns)\n",
        "df_ = df_.fillna(0) # with 0s rather than NaNs"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "MtfnfwPWHrhZ",
        "outputId": "f26e8f9a-401f-46b4-a676-3e24a3d2f5a0"
      },
      "source": [
        "df_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-a9c37c53-3f9e-4487-822f-d162d824595c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM25</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-03-11</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-12</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-13</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-14</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-15</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-16</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-17</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9c37c53-3f9e-4487-822f-d162d824595c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a9c37c53-3f9e-4487-822f-d162d824595c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a9c37c53-3f9e-4487-822f-d162d824595c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "            PM25\n",
              "2022-03-11     0\n",
              "2022-03-12     0\n",
              "2022-03-13     0\n",
              "2022-03-14     0\n",
              "2022-03-15     0\n",
              "2022-03-16     0\n",
              "2022-03-17     0"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "SznBIu0wG38f",
        "outputId": "2dac947e-2d88-4ab6-d888-545992a48820"
      },
      "source": [
        "df_ = pd.DataFrame(re_sh, index= date, columns=columns)\n",
        "df_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-11286098-5aed-47c4-90c0-ea5f5d9f997e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PM25</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-03-11</th>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-12</th>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-13</th>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-14</th>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-15</th>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-16</th>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-03-17</th>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11286098-5aed-47c4-90c0-ea5f5d9f997e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-11286098-5aed-47c4-90c0-ea5f5d9f997e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-11286098-5aed-47c4-90c0-ea5f5d9f997e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "            PM25\n",
              "2022-03-11    17\n",
              "2022-03-12    15\n",
              "2022-03-13    14\n",
              "2022-03-14    13\n",
              "2022-03-15    14\n",
              "2022-03-16    16\n",
              "2022-03-17    16"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1ikiqcrvH9dM"
      },
      "source": [
        "df_.reset_index(level=0, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6UI65W3JH9iK"
      },
      "source": [
        "df_ =df_.rename(columns = {'index':'date'})"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F-iZtp9AH9mH"
      },
      "source": [
        "df_"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7of0z0EuH9oz"
      },
      "source": [
        "conditions = [\n",
        "    (df_['PM25'] <= 25),\n",
        "    (df_['PM25'] >= 26) & (df_['PM25'] <= 37),\n",
        "    (df_['PM25'] > 37) & (df_['PM25'] <= 50),\n",
        "    (df_['PM25'] > 50) & (df_['PM25']<=90),\n",
        "    (df_['PM25'] > 90)\n",
        "    ]\n",
        "\n",
        "# create a list of the values we want to assign for each condition\n",
        "values = ['ดีมาก', 'ดี', 'ปานกลาง', 'เริ่มมีผลต่อสุขภาพ','มีผลต่อสุขภาพ']\n",
        "\n",
        "# create a new column and use np.select to assign values to it using our lists as arguments\n",
        "df_['quality'] = np.select(conditions, values)\n",
        "\n",
        "# display updated DataFrame\n",
        "df_.head()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zc8lCqAjLi5u"
      },
      "source": [
        "df_"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KOqYJy4WRw3d"
      },
      "source": [
        "# ทดลองจัดเก็บใน Database"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HOtdVXxfLi_T"
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "#conda install sqlalchemy psycopg2 pymysql\n",
        "#pip install sqlalchemy psycopg2 pymysql\n",
        "from sqlalchemy import create_engine"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p413Ug4cLjCv"
      },
      "source": [
        "user='postgres'\n",
        "pwd='2307'\n",
        "dbname='CityAir'\n",
        "host='localhost'\n",
        "#host='192.168.9.114' # windows 10 youtube\n",
        "\n",
        "# mysql\n",
        "# port=3306\n",
        "# con = create_engine(f'mysql+pymysql://{user}:{pwd}@{host}:{port}/{dbname}')\n",
        "\n",
        "# postgresql\n",
        "port=5432\n",
        "con=create_engine(f'postgresql://{user}:{pwd}@{host}:{port}/{dbname}')\n",
        "\n",
        "# sqlite\n",
        "#con = create_engine(f'sqlite:///{dbname}.sqlite')\n",
        "print(con)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pXxgwlxeT_OQ"
      },
      "source": [
        "df_"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3IQoPcYNaJCD"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y5JuJgX5T_ZC"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
